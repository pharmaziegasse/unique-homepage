{"version":3,"sources":["components/molecules/Nav/index.js","../node_modules/classnames/bind.js"],"names":["Nav","classProps","classnames","_this","props","className","react__WEBPACK_IMPORTED_MODULE_5__","this","href","src","logo","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","children","React","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","call","join","module","exports","default","undefined"],"mappings":"sKAcMA,6MAGFC,WAAaC,IACT,SACA,mBACA,YACA,mBACA,cACAC,EAAKC,MAAMC,UACX,aACA,qFAIA,OACAC,EAAA,qBAAKD,UAAWE,KAAKN,YACjBK,EAAA,qBAAKD,UAAU,aACXC,EAAA,mBAAGD,UAAU,uBAAuBG,KAAK,SAAQF,EAAA,4BAAQA,EAAA,qBAAKG,IAAKF,KAAKH,MAAMM,KAAMC,IAAI,0BACxFL,EAAA,wBAAQD,UAAU,iBAAiBO,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAChFC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACxEX,EAAA,sBAAMD,UAAU,yBAEpBC,EAAA,qBAAKD,UAAU,2BAA2Ba,GAAG,0BACvCX,KAAKH,MAAMe,mBAxBfC,aAiCHpB,gCC/Cf,IAAAqB,GAOA,WACA,aAEA,IAAAC,EAAA,GAAiBC,eAEjB,SAAAC,IAGA,IAFA,IAAAC,EAAA,GAEAC,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAG,EAAAF,UAAAD,GACA,GAAAG,EAAA,CACA,IAAAC,SAAAD,EAEA,cAAAC,GAAA,WAAAA,EACAL,EAAAM,KAAAxB,WAAAsB,YACO,GAAAG,MAAAC,QAAAJ,GACPJ,EAAAM,KAAAP,EAAAU,MAAA3B,KAAAsB,SACO,cAAAC,EACP,QAAAK,KAAAN,EACAP,EAAAc,KAAAP,EAAAM,IAAAN,EAAAM,IACAV,EAAAM,KAAAxB,WAAA4B,QAMA,OAAAV,EAAAY,KAAA,KAGmCC,EAAAC,SACnCf,EAAAgB,QAAAhB,EACAc,EAAAC,QAAAf,QAKKiB,KAFsBpB,EAAA,WAC3B,OAAAG,GACKU,MAAAK,EAFoB,OAEpBD,EAAAC,QAAAlB,GApCL","file":"static/js/18.b69e85d6.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * POSSIBLE VALUES\r\n * L (Light)\r\n * D (Dark)\r\n */\r\n\r\n/**\r\n * General Navbar Component\r\n */\r\nclass Nav extends React.Component {\r\n\r\n    //** Combine multiple values for className */\r\n    classProps = classnames(\r\n        \"navbar\",\r\n        \"navbar-expand-lg\",\r\n        \"fixed-top\",\r\n        \"scrolling-navbar\",\r\n        \"navbar-dark\",\r\n        this.props.className,\r\n        \"text-white\",\r\n        \"z-depth-0\"\r\n    )\r\n\r\n    render(){\r\n        return (\r\n        <nav className={this.classProps}>\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand sscroll\" href=\"#home\"><strong><img src={this.props.logo} alt=\"Pharmaziegasse Logo\"/></strong></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                     {this.props.children}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n    }\r\n    \r\n}\r\n\r\nexport default Nav;\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(this && this[arg] || arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(this, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(this && this[key] || key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}