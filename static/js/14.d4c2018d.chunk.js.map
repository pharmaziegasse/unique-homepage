{"version":3,"sources":["../node_modules/classnames/bind.js","components/atoms/ModalButton/btn_types.js","components/atoms/ModalButton/btn_styles.js","components/atoms/ModalButton/btn_sizes.js","components/atoms/ModalButton/index.js","components/organisms/SectionContents/services.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","key","call","join","module","exports","default","undefined","ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","classnames","bind","cbst","cbt","String","prototype","replaceAll","str1","str2","ignore","replace","RegExp","Button","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","isModal","exists","param","buttonLink","buttonPage","urlPath","console","error","getClassProps","btnstyle","btntype","size","disabled","className","sendPixel","options","autoConfig","debug","email","localStorage","getItem","advancedMatching","em","ReactPixel","init","track","placement","getUrlPath","state","visible","log","react","onClick","data-toggle","data-target","buttonTitle","href","React","defaultProps","btnhref","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_atoms_ModalButton__WEBPACK_IMPORTED_MODULE_1__","_helper_Text__WEBPACK_IMPORTED_MODULE_2__","react_dom_server__WEBPACK_IMPORTED_MODULE_3__","react_html_parser__WEBPACK_IMPORTED_MODULE_4__","react_html_parser__WEBPACK_IMPORTED_MODULE_4___default","n","SectionContent","content","btn","id","data-ride","data-interval","map","item","data-slide-to","role","ReactHtmlParser","renderToString","value","title","dangerouslySetInnerHTML","__html","text","name","info","data-slide","aria-hidden"],"mappings":"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","file":"static/js/14.d4c2018d.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(this && this[arg] || arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(this, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(this && this[key] || key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n\r\n//** React Facebook Pixel */\r\nimport ReactPixel from 'react-facebook-pixel';\r\n\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\nString.prototype.replaceAll = function(str1, str2, ignore) \r\n{\r\n    return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n} \r\n\r\n/**\r\n * General Button Element\r\n */\r\nclass Button extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    //** Convert url to Modal */\r\n    isModal = () => {\r\n        if(this.exists()){\r\n            if(this.props.param.buttonLink === null || this.props.param.buttonLink === undefined){\r\n                this.props.param.buttonPage.urlPath = this.props.param.buttonPage.urlPath.replace('/','#');\r\n                return true;\r\n            }\r\n            if(this.props.param.buttonLink !== null && this.props.param.buttonLink !== undefined){\r\n                console.error(\"Link\");\r\n                return false;\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if button should be displayed */\r\n    exists = () => {\r\n        if(this.props.param === undefined || this.props.param === null){\r\n            return false;\r\n        } else {\r\n            if(this.props.param.buttonPage || this.props.param.buttonLink){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //** Combine multiple values for className */\r\n    getClassProps = () => {\r\n        let props = classnames(\r\n            \"btn\",\r\n            \"font-weight-bold\",\r\n            cbst(this.props.btnstyle),\r\n            cbt(this.props.btntype),\r\n            cbs(this.props.size),\r\n            this.props.disabled,\r\n            this.props.className\r\n        )\r\n        return props;\r\n    }\r\n\r\n    sendPixel = () => {\r\n        const options = {\r\n            autoConfig: true, // set pixel's autoConfig\r\n            debug: false, // enable logs\r\n        };\r\n\r\n        let email = localStorage.getItem('f_e');\r\n        // If a user has already registered\r\n        if(email !== undefined && email !== null){\r\n            const advancedMatching = { em: email }; // optional, more info: https://developers.facebook.com/docs/facebook-pixel/pixel-with-ads/conversion-tracking#advanced_match\r\n            ReactPixel.init('398871454084167', advancedMatching, options); // Init Pixel with advanced options\r\n        } else {\r\n            ReactPixel.init('398871454084167', options);\r\n        }\r\n\r\n        ReactPixel.track( 'ViewContent', { placement: 'body' } );\r\n    }\r\n\r\n    getUrlPath = (urlPath) => {\r\n        if(urlPath){\r\n            return \"#\"+urlPath.replaceAll(\"#\", \"_\");\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.param);\r\n        console.log(this.exists(), this.exists() && this.isModal());\r\n        return (\r\n            <>\r\n                { this.exists() &&\r\n                    <div>\r\n                        {this.isModal() ? (\r\n                                <button onClick={this.sendPixel} data-toggle=\"modal\" data-target={this.getUrlPath(this.props.param.buttonPage.urlPath)} className={this.getClassProps()}>\r\n                                    {this.props.param.buttonTitle}\r\n                                </button>\r\n                            ) : (\r\n                                <a href={this.props.param.buttonLink} className={this.getClassProps()}>\r\n                                    {this.props.param.buttonTitle}\r\n                                </a>\r\n                            )\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.WHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false,\r\n    buttonLink: null,\r\n    buttonTitle: \"Unnamed\",\r\n    btnhref: \"\"\r\n}\r\n\r\nexport default Button\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport ModalBtn from \"../../atoms/ModalButton\"\r\n\r\n//** Helpers */\r\n//** Personalization */\r\nimport Text from \"../../helper/Text\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\ntype Props = {\r\n    content: string,\r\n    btn: string\r\n}\r\n\r\n/**\r\n * Section: Services\r\n */\r\nconst SectionContent = (props: Props): React.Element<*> => {\r\n    const { content, btn } = props;\r\n\r\n    function getActiveItem(id){\r\n        if(id === 0){\r\n            return \"carousel-item active\";\r\n        }else{\r\n            return \"carousel-item\";\r\n        }\r\n    }\r\n    function getActiveIndicator(id){\r\n        if(id === 0){\r\n            return \"btn-floating btn-lg active\";\r\n        }else{\r\n            return \"btn-floating btn-lg\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           \r\n            \r\n            <div className=\"wrapper-carousel-fix\">\r\n            \r\n                <div id=\"interview-carousel\" className=\"carousel no-flex testimonial-carousel slide dark-grey-text\" data-ride=\"carousel\" data-interval=\"10000\">\r\n                <ol className=\"carousel-indicators\">\r\n                    {content.map((item, i) => {\r\n                    return(\r\n                        <button key={i} data-target=\"#interview-carousel\" data-slide-to={i} className={getActiveIndicator(i)}><span>{i+1}</span></button>\r\n                    )\r\n                        \r\n                    })}\r\n                </ol>\r\n               \r\n                <div className=\"carousel-inner py-5\" role=\"listbox\">\r\n                \r\n                {content.map((item, i) => {\r\n                    return(\r\n                    <div key={i} className={getActiveItem(i)}>\r\n                        <div className=\"testimonial pb-5\">\r\n                             <div className=\"num-display font-weight-bold\"><span>{\"0\"+(i+1)}</span></div>\r\n                            <h2 className=\"h1-responsive font-weight-bold mb-5\">{ReactHtmlParser(renderToString(<Text value={ item.title }/>))}</h2>\r\n                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ item.text }/>))}}></div>\r\n                            <h4 className=\"font-weight-bold\">{ReactHtmlParser(renderToString(<Text value={ item.name }/>))}</h4>\r\n                            <h6 className=\"font-weight-bold my-3 text-muted\">{ReactHtmlParser(renderToString(<Text value={ item.info }/>))}</h6>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                })}\r\n                </div>\r\n                <a className=\"carousel-control-prev left carousel-control\" href=\"#interview-carousel\" role=\"button\"\r\n                    data-slide=\"prev\">\r\n                    <span className=\"icon-prev\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a className=\"carousel-control-next right carousel-control\" href=\"#interview-carousel\" role=\"button\"\r\n                    data-slide=\"next\">\r\n                    <span className=\"icon-next\" aria-hidden=\"true\"></span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                </a>\r\n                </div>\r\n            </div>\r\n            <ModalBtn param={btn} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionContent\r\n"],"sourceRoot":""}