{"version":3,"sources":["components/organisms/SectionContents/manifest.jsx"],"names":["GET_IMAGE","gql","Manifest","props","onImgFetched","img","id","setState","renderImg","image_id","key","client","className","onClick","a","query","variables","this","token","undefined","data","image","bind","state","src","urlLink","alt","title","dangerouslySetInnerHTML","__html","ReactHtmlParser","renderToString","value","paragraph","draggable","React"],"mappings":"ihBAcA,IAAMA,EAAYC,YAAH,KAiBTC,E,kDACD,WAAYC,GAAO,IAAD,8BACf,cAAMA,IAIVC,aAAe,SAACC,EAAKC,GACjB,EAAKC,SAAS,CAAC,CAACD,GAAKD,KANN,EAUlBG,UAAY,SAACC,EAAUC,GACpB,OACI,gBAAC,IAAD,MACK,SAAAC,GAAM,OACH,uBAAKC,UAAU,gBACX,uBAAKA,UAAU,wBAAwBC,QACnC,cAAAC,EAAA,oCAAAA,EAAA,sEACyBH,EAAOI,MAAM,CAC9BA,MAAOf,EACPgB,UAAW,CAAE,GAAMP,EAAU,MAASQ,KAAKd,MAAMe,SAHzD,qBAKgBC,KAJNC,EADV,EACUA,OAKFH,KAAKb,aAAagB,EAAKC,MAAOX,GANtC,gDAQEY,KARF,iBAUC,EAAKC,MAAMb,IAAQ,uBAAKE,UAAU,YAAYY,IAAK,4BAA4B,EAAKD,MAAMb,GAAKe,QAASC,IAAK,SAAShB,EAAI,WAxB/I,EAAKa,MAAQ,GAFE,E,qDAmCf,OACI,uBAAKX,UAAU,uBACW,KAArBK,KAAKd,MAAMwB,OACR,sBAAIf,UAAU,mBAAmBgB,wBAAyB,CAACC,OAAQC,IAAgBC,yBAAe,gBAAC,IAAD,CAAMC,MAAQf,KAAKd,MAAMwB,aAE/H,uBAAKf,UAAU,YACX,uBAAKA,UAAU,YACX,uBAAKgB,wBAAyB,CAACC,OAAQC,IAAgBC,yBAAe,gBAAC,IAAD,CAAMC,MAAQf,KAAKd,MAAM8B,kBAEnG,uBAAKrB,UAAU,wBACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,eAAc,uBAAKsB,UAAU,QAAQtB,UAAU,YAAYY,IAAK,4BAA4BP,KAAKd,MAAME,IAAKqB,IAAI,oB,GA/CpIS,aAwDRjC","file":"static/js/25.6bde9210.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport * as React from 'react';\r\n//** Additional Frameworks */\r\n//** Apollo */\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport { gql } from \"apollo-boost\";\r\n\r\n//** Helpers */\r\n//** Personalization */\r\nimport Text from \"../../helper/Text\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\n/* Get Images QUERY */\r\nconst GET_IMAGE = gql`\r\n    query img(\r\n            $token: String!\r\n            $id: Int!\r\n        ){\r\n        image(\r\n            token: $token\r\n            id: $id\r\n        ){\r\n            urlLink\r\n        }\r\n    }\r\n`;\r\n\r\n/**\r\n * Section: Steps\r\n */\r\nclass Manifest extends React.Component{\r\n     constructor(props){\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    onImgFetched = (img, id) => {\r\n        this.setState({[id]: img});\r\n    }\r\n\r\n    //** Query image and render it */\r\n     renderImg = (image_id, key) => {\r\n        return(\r\n            <ApolloConsumer>\r\n                {client => (\r\n                    <div className=\"imgcontainer\">\r\n                        <div className=\"img-profile-container\" onClick={\r\n                            async function(){\r\n                                let { data } = await client.query({\r\n                                    query: GET_IMAGE,\r\n                                    variables: { \"id\": image_id, \"token\": this.props.token }\r\n                                });\r\n                                if(data !== undefined){\r\n                                    this.onImgFetched(data.image, key)\r\n                                }\r\n                            }.bind(this)\r\n                        }>\r\n                            {this.state[key] && <img className=\"img-fluid\" src={\"https://pharmaziegasse.at\"+this.state[key].urlLink} alt={\"step \"+(key+1)} />}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </ApolloConsumer>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container text-left\">\r\n                {this.props.title !== \"\" &&\r\n                    <h2 className=\"font-weight-bold\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ this.props.title }/>))}}></h2>\r\n                }\r\n                <div className=\"row my-5\">\r\n                    <div className=\"col-md-6\">\r\n                        <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ this.props.paragraph }/>))}}></div>\r\n                    </div>\r\n                    <div className=\"col-md-6 text-center\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 mb-5\"><img draggable=\"false\" className=\"img-fluid\" src={\"https://pharmaziegasse.at\"+this.props.img} alt=\"Stefan\"/></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Manifest;\r\n"],"sourceRoot":""}