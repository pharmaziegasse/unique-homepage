{"version":3,"sources":["components/atoms/Alert/index.jsx","components/atoms/Checkbox/index.jsx","components/atoms/Input/index.jsx","components/atoms/Button/btn_types.js","components/atoms/Button/btn_styles.js","components/atoms/Button/btn_sizes.js","components/atoms/Button/index.js","components/atoms/FlagIcon/index.jsx","components/organisms/Modals/register/index.jsx"],"names":["Alert","props","hexToRgb","hex","result","exec","r","parseInt","g","b","isDark","bg","undefined","match","state","visible","show","classProps","classnames","this","className","style","backgroundColor","role","children","React","Component","Checkbox","rand","Math","floor","random","event","fieldName","target","name","fieldValue","checked","onChange","type","id","onFieldChange","bind","htmlFor","Input","value","validation","validate","placeholder","ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","cbst","cbt","Button","btnstyle","btntype","size","href","disabled","onClick","defaultProps","FlagIcon","FlagIconFactory","useCssModules","CREATE_USER_MUTATION","gql","GET_MODAL_DATA","Modal","responseFacebook","response","first_name","setState","prenamelive","last_name","surnamelive","email","emaillive","picture","data","url","accessToken","verified","validateInput","oAuthSuccess","oAuthed","formHidden","sendData","a","async","localStorage","setItem","prename","surname","phone","formvalues","address","postalcode","city","country","newsletter","register","variables","token","then","registrationRegistrationformPage","showError","showSuccess","buffer","catch","error","message","devError","console","checkTel","phonelive","checkEmail","checkName","handleSubmitForm","preventDefault","push","gdpr","length","pixel","track","handleChange","field","phoneNumber","parsePhoneNumberFromString","formatInternational","number","getName","require","cc","toLowerCase","EmailValidator","trim","printFlag","code","printErrorDialogs","Array","isArray","errors","Object","keys","forEach","element","index","key","printError","editForm","modaldata","page","log","tabIndex","aria-labelledby","aria-hidden","data-backdrop","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","ReactHtmlParser","renderToString","Text","registrationHead","thankYouText","class","window","location","search","substr","onSubmit","e","valid3","valid4","valid1","valid2","valid5","valid6","valid7","registrationNewsletterText","registrationPrivacyText","registrationInfoText","renderContent","compose","graphql","options"],"mappings":"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","file":"static/js/17.e522b9e6.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Alert component\r\n */\r\nclass Alert extends React.Component{\r\n    constructor(props){\r\n       super(props);\r\n       //** This state controls the visibility / rendering of the component internally */\r\n       this.state = {\r\n           visible: props.show\r\n        }\r\n    }\r\n\r\n    //** Detect if Text should be white or black */\r\n    hexToRgb = (hex) => {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    isDark = () => {\r\n        if(this.props.bg === null || this.props.bg === undefined){\r\n            return null;\r\n        } else {\r\n            let r = this.hexToRgb(this.props.bg).r;\r\n            let g = this.hexToRgb(this.props.bg).g;\r\n            let b = this.hexToRgb(this.props.bg).b;\r\n            let rgb = \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\r\n\r\n            let match = /rgb\\((\\d+).*?(\\d+).*?(\\d+)\\)/.exec(rgb);\r\n            let result = ( match[1] & 255 )\r\n                + ( match[2] & 255 )\r\n                + ( match[3] & 255 )\r\n                < 3 * 256 / 1.2;\r\n            if(result){\r\n                return \"text-white\";\r\n            } else {\r\n                return \"text-grey\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"alert\",\r\n            this.props.className,\r\n            this.isDark()\r\n        )        \r\n        \r\n        //** Check if Alert is visible */\r\n        if(this.state.visible){\r\n            return (\r\n                <div className={classProps} style={{backgroundColor: this.props.bg}} role=\"alert\">\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Checkbox Component\r\n */\r\nclass Checkbox extends React.Component{\r\n    //** Get a random number for ID purposes - probably better and saver to create unique IDs */\r\n    rand = Math.floor((Math.random() * 1000) + 1);\r\n\r\n    //* Change function (check -> uncheck || uncheck -> check) */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.checked;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-check\",\r\n            this.props.className\r\n        )\r\n\r\n        return (\r\n            <div className={classProps}>\r\n                <input type=\"checkbox\" name={this.props.name} className=\"form-check-input\" id={this.props.name + \"-\" + this.rand} checked={this.props.checked} onChange={this.onFieldChange.bind(this)} />\r\n                <label className=\"form-check-label text-left\" htmlFor={this.props.name + \"-\" + this.rand} >{this.props.children}</label>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Checkbox;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Input Component\r\n */\r\nclass Input extends React.Component{\r\n    //** Change handler */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    //** Validator */\r\n    validate() {\r\n        if(this.props.validation) {\r\n            return \"valid\";\r\n        } else if (this.props.validation === false) {\r\n            return \"invalid\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-control\",\r\n            this.props.className,\r\n            this.validate()\r\n        )\r\n\r\n        return (\r\n           <input className={classProps} type={this.props.type} value={this.props.value} name={this.props.name} placeholder={this.props.placeholder} onChange={this.onFieldChange.bind(this)} />\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Input;\r\n","const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\n//** Preconfigure datatypes */\r\ntype Props = {\r\n    btnstyle: string,\r\n    size: string,\r\n    href: string,\r\n    children: React.Node,\r\n    className: string,\r\n    disabled: boolean\r\n}\r\n\r\n/**\r\n * General Button Element\r\n */\r\nconst Button = (props: Props): React.Element<*> => {\r\n    const { btnstyle, btntype, size, href, children, className, disabled, onClick } = props;\r\n\r\n    //** Combine multiple values for className */\r\n    const classProps: string = classnames(\r\n        \"btn\",\r\n        cbst(btnstyle),\r\n        cbt(btntype),\r\n        cbs(size),\r\n        {\r\n            disabled\r\n        },\r\n        className\r\n    )\r\n\r\n    return (\r\n        <a href={href} className={classProps} onClick={onClick} >\r\n            {children}\r\n        </a>\r\n    )\r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.oWHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false\r\n}\r\n\r\nexport default Button\r\n","// @flow\r\n//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Additional frameworks */\r\nimport FlagIconFactory from 'react-flag-icon-css'\r\n\r\n//** Create new FlagIcon */\r\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false })\r\n\r\nexport default FlagIcon\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Additional Frameworks */\r\n//** Validation */\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\r\nimport * as EmailValidator from 'email-validator';\r\n//** Apollo */\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { gql } from \"apollo-boost\";\r\n//** oAuth */\r\nimport FacebookLogin from 'react-facebook-login';\r\n//import GoogleLogin from 'react-google-login';\r\n\r\n//** Icons */\r\nimport { FaFacebook } from 'react-icons/fa';\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport Checkbox from '../../../atoms/Checkbox';\r\nimport Input from '../../../atoms/Input';\r\nimport Button from '../../../atoms/Button';\r\nimport FlagIcon from '../../../atoms/FlagIcon';\r\nimport Alert from '../../../atoms/Alert';\r\n\r\n//** Helpers */\r\n//** Personalization */\r\nimport Text from \"../../../helper/Text\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\n//** Mutation: Create User */\r\nconst CREATE_USER_MUTATION = gql`\r\n    mutation register($token: String!, $values: GenericScalar!) {\r\n        registrationRegistrationformPage(token: $token, url: \"/pharmaziegasse/registration\", values: $values) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//** Mutation: Get Data for Modal */\r\nconst GET_MODAL_DATA = gql`\r\n    query modal($token: String!) {\r\n    page(token: $token, url: \"/pharmaziegasse/registration\") {\r\n        urlPath\r\n        ... on RegistrationRegistrationformPage {\r\n        registrationHead\r\n        registrationInfoText\r\n        registrationNewsletterText\r\n        registrationPrivacyText\r\n        registrationStepText\r\n        thankYouText\r\n        registrationButton {\r\n            buttonTitle\r\n            buttonPage {\r\n            id\r\n            urlPath\r\n            }\r\n        }\r\n        }\r\n    }\r\n    }\r\n`;\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //** oAuthed = If user is already logged in with Facebook or Google */\r\n        //**  Difference between phone and phonelive (maps to everything else too): */\r\n        //**  Phone is the final state, which is set by the validation-function. Phonelive is the current value of the input field. */\r\n        //** picture is set when provided by Facebook oAuth */\r\n        //** country is gathered from phone number and is required for the flag to show */\r\n        //** verified = If user has proceeded using Facebook oAuth (not that likely to be a bot) */\r\n        //** formHidden = When user proceeds with Facebook oAuth, most data is already known. The name + email form is hidden */\r\n        //** showError / showSuccess = Displays the corresponding messages */\r\n\r\n        this.state = {\r\n           phone: undefined,\r\n           email: undefined,\r\n           prename: undefined,\r\n           surname: undefined,\r\n           country: false,\r\n           picture: undefined,\r\n           gdpr: false,\r\n           newsletter: false,\r\n           showError: false,\r\n           verified: false,\r\n           showSuccess: false,\r\n           oAuthed: false,\r\n           formHidden: false,\r\n           phonelive: \"\",\r\n           emaillive: \"\",\r\n           prenamelive: \"\",\r\n           surnamelive: \"\",\r\n        }\r\n    }\r\n\r\n    //** oAuth response */\r\n    responseFacebook = (response) => {\r\n        if(response.first_name !== undefined && response.first_name !== null){\r\n            this.setState({prenamelive: response.first_name});\r\n        }\r\n        if(response.last_name !== undefined && response.last_name !== null){\r\n            this.setState({surnamelive: response.last_name});\r\n        }\r\n        if(response.email !== undefined && response.email !== null){\r\n            this.setState({emaillive: response.email});\r\n        }\r\n        if(response.picture !== undefined && response.picture !== null){\r\n            this.setState({picture: response.picture.data.url});\r\n        }\r\n        if(response.accessToken !== undefined && response.accessToken !== null){\r\n            this.setState({verified: true});\r\n        }\r\n\r\n        this.validateInput();\r\n        this.oAuthSuccess();\r\n    }\r\n\r\n    //** Google oAuth has been deactivated for now */\r\n    /*responseGoogle = (response) => {\r\n        console.log(response);\r\n    }*/\r\n\r\n    //** oAuth function */\r\n    oAuthSuccess = () => {\r\n        //** Hide oAuth buttons\r\n        this.setState({oAuthed: true});\r\n        this.setState({formHidden: true});\r\n    }\r\n\r\n    //** Send form data - create user with user mutation */\r\n    sendData = async () => {\r\n        //** Set prename localStorgae */\r\n        localStorage.setItem('f_n', this.state.prename);\r\n        localStorage.setItem('f_l', this.state.surname);\r\n        localStorage.setItem('f_e', this.state.email);\r\n        localStorage.setItem('f_p', this.state.phone);\r\n        //** Set values that will be sent */\r\n        let formvalues = {\r\n            \"title\": \"\",\r\n            \"first_name\": this.state.prename,\r\n            \"last_name\": this.state.surname,\r\n            \"email\": this.state.email,\r\n            \"telephone\": this.state.phone,\r\n            \"address\": this.state.address,\r\n            \"postal_code\": this.state.postalcode,\r\n            \"city\": this.state.city,\r\n            \"country\": this.state.country,\r\n            \"verified\": this.state.verified,\r\n            \"newsletter\": this.state.newsletter\r\n        };\r\n        //** console.log(formvalues); */\r\n        //** Check if the form values have been set (just to be sure) */\r\n        if(formvalues !== null || formvalues !== undefined){\r\n            //** Call graphQL mutation */\r\n            await this.props.register({\r\n                variables: {\r\n                    \"token\": this.props.token,\r\n                    \"values\": formvalues\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                //** Handle response (debug using console.log of data) */\r\n                if(data.registrationRegistrationformPage.result === \"OK\"){\r\n                    //** Hide error and show success message */\r\n                    this.setState({showError: false});\r\n                    this.setState({showSuccess: true});\r\n                } else {\r\n                    //** Show error message and hide success message */\r\n                    this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n                    this.setState({showError: true});\r\n                    this.setState({showSuccess: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                if(error.message === \"GraphQL error: {'telephone': ['A user with that phone number already exists.']}\"){\r\n                    this.setState({\r\n                        buffer: \"Die eingetragene Telefonnummer wurde bereits verwendet.\",\r\n                        showError: true,\r\n                        devError: error.message\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        buffer: \"Es ist ein unerwarteter Fehler aufgetreten. Bitte versuchen Sie es etwas später erneut.\",\r\n                        showError: true,\r\n                        devError: error.message\r\n                    });\r\n                }\r\n                console.error(error);\r\n            })\r\n        } else {\r\n            this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }\r\n    };\r\n\r\n    validateInput = () => {\r\n        this.checkTel(this.state.phonelive);\r\n        this.checkEmail(this.state.emaillive);\r\n        this.checkName(\"surname\",this.state.surnamelive);\r\n        this.checkName(\"prename\",this.state.prenamelive);\r\n    }\r\n\r\n    //** Handle the submit of the modal form */\r\n    handleSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        let error = [];\r\n        let buffer = [];\r\n        \r\n        //** Check inputs and generate errors */\r\n        //** Errors are written to a buffer which is then written to this.state.buffer */\r\n        if (this.state.prename === undefined || this.state.surname === undefined){\r\n            buffer.push(\"Bitte geben Sie Ihren Namen ein.\");\r\n            error.push(4);\r\n        } \r\n        if(this.state.phone === undefined){\r\n            buffer.push(\"Bitte geben Sie eine Telefonnummer ein.\");\r\n            error.push(1);\r\n        }\r\n        if(this.state.phone === false){\r\n            buffer.push(\"Die eingegebene Telefonnummer ist ungültig. Bitte geben Sie auch die Ländervorzahl (z.B. +43) an.\");\r\n            error.push(1);\r\n        }\r\n        if(this.state.email === undefined){\r\n            buffer.push(\"Bitte geben Sie eine E-Mail Adresse ein.\");\r\n            error.push(3);\r\n        }\r\n        if (this.state.email === false){\r\n            buffer.push(\"Die eingegebene E-Mail Adresse ist ungültig.\");\r\n            error.push(3);\r\n        }\r\n        if (this.state.prename === false || this.state.surname === false){\r\n            buffer.push(\"Ihr Name darf keine Sonderzeichen enthalten.\");\r\n            error.push(5);\r\n        } \r\n        if (this.state.gdpr === false){\r\n            buffer.push(\"Bitte beachten Sie die Datenschutzerklärung.\");\r\n            error.push(6);\r\n        }\r\n        if(error !== undefined && error.length > 0){\r\n            //** Write buffer, show error alert and hide success alert */\r\n            this.setState({buffer:buffer});\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }else{\r\n            //** If no errors -> Send the data using a graphQL mutation */\r\n            // Facebook Pixel\r\n            let data = {\r\n                name: this.state.prename + \" \" + this.state.surname,\r\n                email: this.state.email,\r\n                phone: this.state.phone\r\n            }\r\n            this.props.pixel.track( 'CompleteRegistration', data );\r\n            this.sendData();\r\n        };\r\n    }\r\n\r\n    //** Update states with latest input field data + verify inputs */\r\n    handleChange = (field, value) => {\r\n        //** Update live states and check validity in callback */\r\n        switch (field) {\r\n            case 'phone':\r\n                this.setState({phonelive:value}, this.checkTel(value))\r\n                break;\r\n            case 'email':\r\n                this.setState({emaillive:value}, this.checkEmail(value))\r\n                break;\r\n            case 'prename':\r\n                this.setState({prenamelive:value},this.checkName(\"prename\",value))\r\n                break;\r\n            case 'surname':\r\n                this.setState({surnamelive:value},this.checkName(\"surname\",value))\r\n                break;\r\n            case 'newsletter':\r\n                this.setState({newsletter:value})\r\n                break;\r\n            case 'gdpr':\r\n                this.setState({gdpr:value})\r\n                break;\r\n            default:\r\n                this.setState({[field]:value})\r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if phone number is valid */\r\n    checkTel = (value) => {\r\n        if(value !== ''){\r\n            const phoneNumber = parsePhoneNumberFromString(value);\r\n            if(phoneNumber !== undefined){\r\n                phoneNumber.formatInternational();\r\n                this.setState({phone:phoneNumber.number});\r\n                // Set country\r\n                if(phoneNumber.country !== undefined){\r\n                    const { getName } = require('country-list');\r\n                    this.setState({\r\n                        country: getName(phoneNumber.country),\r\n                        cc: phoneNumber.country.toLowerCase()\r\n                    })\r\n                }\r\n            }else{\r\n                this.setState({country:false, cc:false})\r\n                this.setState({phone:false})\r\n            }\r\n        } else {\r\n            this.setState({country:false, cc:false})\r\n            this.setState({phone:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if E-Mail is valid */\r\n    checkEmail = (value) => {\r\n        if(value !== ''){\r\n            if(EmailValidator.validate(value)){\r\n                this.setState({email:value})\r\n            } else {\r\n                this.setState({email:false})\r\n            }\r\n        } else {\r\n            this.setState({email:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if name contains special chars */\r\n    checkName = (field,value) => {\r\n        if(value.trim() !== \"\"){\r\n            this.setState({[field]:value})\r\n        } else {\r\n            this.setState({[field]:undefined})\r\n        }\r\n    }\r\n\r\n    //** Update flag icon in phone input */\r\n    printFlag = () => {\r\n        if(this.state.cc !== false){\r\n            return <FlagIcon code={this.state.cc} />\r\n        }\r\n    }\r\n\r\n    printErrorDialogs = () => {\r\n        if(Array.isArray(this.state.buffer)){\r\n            let errors = [];\r\n            let buffer = this.state.buffer;\r\n            Object.keys(buffer).forEach(function (element, index) {\r\n                errors.push(<p key={index}>{buffer[index]}</p>);\r\n            });\r\n            return errors;\r\n        } else {\r\n            return <p>{this.state.buffer}</p>\r\n        }\r\n    }\r\n\r\n    //** Print error Alert component */\r\n    printError = () => {\r\n        //** There have been issues, where printError() was called, but this.state.showError and this.state.buffer was false -> leading to crash */\r\n        if(this.state.showError){\r\n            //** Check if message (buffer) is written. */\r\n            if(this.state.buffer !== null || this.state.buffer !== undefined){\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        {\r\n                            this.printErrorDialogs()\r\n                        }\r\n                    </Alert>\r\n                );\r\n            } else {\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        Unknown error.\r\n                    </Alert>\r\n                );\r\n            }\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //** Show formular for edit */ \r\n    editForm = () => {\r\n        this.setState({formHidden: false});\r\n    }\r\n\r\n    renderContent (){\r\n        \r\n        //** Text data for the modal */ \r\n        let modaldata = (this.props.data.page);\r\n        console.log(modaldata);\r\n\r\n        if(this.props.data.page !== undefined){\r\n\r\n            return(\r\n                <div className=\"modal fade\" id=\"_pharmaziegasse_registration\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"Registrieren\" aria-hidden=\"true\" data-backdrop=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-lg modal-notify modal-info\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\" className=\"dark-text\">×</span>\r\n                        </button>\r\n                        <div className=\"lead font-weight-bold text-center\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationHead }/>))}}></div>\r\n                        <hr/>\r\n                        {this.state.showSuccess ? (\r\n                            <div className=\"success\">\r\n                                <Alert className=\"alert-success\" show=\"true\">\r\n                                    <i className=\"far fa-check-circle fa-3x green-text mt-1 mb-2\"></i>\r\n                                    <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.thankYouText }/>))}}></div>\r\n                                </Alert>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"register-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7\">\r\n                                {!this.state.oAuthed ? (\r\n                                    <div class=\"d-none\">\r\n                                        <div className=\"oAuth\">\r\n                                            {\r\n                                                //** Facebook oAuth has been disabled for now */\r\n                                                /*<FacebookLogin\r\n                                                    appId=\"438514240304319\"\r\n                                                    autoLoad={false}\r\n                                                    icon={<FaFacebook/>}\r\n                                                    cssClass=\"btn-facebook kep-login-facebook kep-login-facebook-medium\"\r\n                                                    fields=\"first_name,last_name,email,picture\"\r\n                                                    textButton=\"Weiter mit Facebook\"\r\n                                                    callback={this.responseFacebook}\r\n                                                />*/\r\n                                            }\r\n                                            {\r\n                                                //** Google oAuth has been disabled for now */\r\n                                                /*<GoogleLogin\r\n                                                    clientId=\"762647868786-a6do4s713inonqo663lbgqqgo40u5sen.apps.googleusercontent.com\"\r\n                                                    buttonText=\"Weiter mit Google\"\r\n                                                    className=\"btn-google\"\r\n                                                    onSuccess={this.responseGoogle}\r\n                                                    onFailure={this.responseGoogle}\r\n                                                    cookiePolicy={'single_host_origin'}\r\n                                                />*/\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w-100\">\r\n                                            <div className=\"splitter my-4\"><span className=\"or\"><span className=\"or-text\">oder</span></span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                ):(\r\n                                    <div className=\"alert alert-success mb-4\">\r\n                                        <h4 className=\"font-weight-bold\">Hallo {this.state.prename}!</h4><p>Wir benötigen jetzt nur noch Deine Telefonnummer.</p>\r\n                                    </div>\r\n                                )}\r\n                                    {this.printError()}\r\n\r\n                                    {((window.location.search.substr(1) === \"dev\") && this.state.devError) &&\r\n                                        <Alert className=\"alert-warning\" show=\"true\">\r\n                                            {this.state.devError}\r\n                                        </Alert>\r\n                                    }\r\n                                \r\n                                    <form id=\"form-reg\" onSubmit={(e) => {this.handleSubmitForm(e); e.preventDefault();}}>\r\n                                        <div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"prename\" placeholder=\"Vorname*\" value={this.state.prenamelive} validation={this.state.valid3} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"surname\" placeholder=\"Nachname*\" value={this.state.surnamelive} validation={this.state.valid4} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"input-grp\">\r\n                                            {this.printFlag()}\r\n                                            <i className=\"fas fa-phone\"></i>\r\n                                            <Input className=\"my-3\" type=\"text\" name=\"phone\" placeholder=\"Telefonnummer*\" value={this.state.phonelive} validation={this.state.valid1} onChange={this.handleChange.bind(this)}/>\r\n                                        </div>\r\n                                        {!this.state.formHidden ? (\r\n                                        <>\r\n                                        <div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-envelope\"></i>\r\n                                                <Input className=\"my-3\" type=\"email\" name=\"email\" placeholder=\"E-Mail Adresse*\" value={this.state.emaillive} validation={this.state.valid2}  onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-4\">\r\n                                                <div className=\"input-grp\">\r\n                                                    <i className=\"fas fa-globe\"></i>\r\n                                                    <Input className=\"my-3\" type=\"text\" name=\"postalcode\" placeholder=\"PLZ\" value={this.state.postalcode} validation={this.state.valid5}  onChange={this.handleChange.bind(this)}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-8\">\r\n                                                <div className=\"input-grp\">\r\n                                                    <i className=\"fas fa-city\"></i>\r\n                                                    <Input className=\"my-3\" type=\"text\" name=\"city\" placeholder=\"Stadt\" value={this.state.city} validation={this.state.valid6}  onChange={this.handleChange.bind(this)}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-12\">\r\n                                                <div className=\"input-grp\">\r\n                                                    <i className=\"far fa-building\"></i>\r\n                                                    <Input className=\"mb-2\" type=\"text\" name=\"address\" placeholder=\"Adresse\" value={this.state.address} validation={this.state.valid7}  onChange={this.handleChange.bind(this)}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span className=\"text-muted\">* = Pflichtfeld</span>\r\n                                        </>\r\n                                        ) : (\r\n                                            <div className=\"alert alert-info register-info alert-data\">\r\n                                                <p className=\"m-0\">\r\n                                                <span className=\"font-weight-bold\">Meine Daten</span><br/>\r\n                                                Name: {this.state.prename} {this.state.surname}<br/>\r\n                                                E-Mail: {this.state.email}<br/>\r\n                                                <Button btnstyle=\"oELEGANT\" size=\"SM\" onClick={this.editForm}>Ändern</Button>\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"text-left mb-3\">\r\n                                        <Checkbox name=\"newsletter\" className=\"my-4\" onChange={this.handleChange.bind(this)}>\r\n                                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationNewsletterText }/>))}}></div>\r\n                                        </Checkbox>\r\n                                        <Checkbox name=\"gdpr\" validation={this.state.valid6} onChange={this.handleChange.bind(this)}>\r\n                                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationPrivacyText }/>))}}></div>\r\n                                        </Checkbox>\r\n                                        </div>\r\n                                        <input className=\"btn btn-outline-elegant font-weight-bold\" type=\"submit\" value=\"Kostenloses Beratungsgespräch anfordern\" />\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-md-5 text-left\">\r\n                                <Alert className=\"alert-info register-info\" show=\"true\">\r\n                                    <i className=\"far fa-lightbulb fa-2x\"></i>\r\n                                    <div className=\"mt-2 dark-grey-text\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationInfoText }/>))}}></div>\r\n                                </Alert>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state);\r\n        console.log(this.props.data);\r\n        if(this.props.data !== undefined){\r\n            return this.renderContent();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(CREATE_USER_MUTATION, {\r\n        name: 'register'\r\n    }),\r\n    graphql(GET_MODAL_DATA, {\r\n        options: (props) => ({ variables: { \"token\": props.token } })\r\n    })\r\n)(Modal);\r\n"],"sourceRoot":""}