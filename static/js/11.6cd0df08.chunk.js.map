{"version":3,"sources":["components/atoms/Alert/index.jsx","components/atoms/WhatsAppButton/index.jsx","components/organisms/Modals/payment/form.jsx","components/organisms/Modals/payment/index.jsx"],"names":["Alert","props","hexToRgb","hex","result","exec","r","parseInt","g","b","isDark","bg","undefined","match","state","visible","show","classProps","classnames","this","className","style","backgroundColor","role","children","React","Component","WhatsAppButton","num","text","link","replace","encodeURIComponent","title","href","target","rel","Form","renderContent","texts","head","sub","payment","success","createOrder","data","actions","order","create","purchase_units","amount","value","onApprove","capture","then","details","payer","name","given_name","setState","prevState","status","console","error","dangerouslySetInnerHTML","__html","success_msg","wa_num","bind","PaymentModal","modalID","index","id","tabIndex","aria-labelledby","aria-hidden","data-backdrop","type","data-dismiss","aria-label"],"mappings":"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","file":"static/js/11.6cd0df08.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Alert component\r\n */\r\nclass Alert extends React.Component{\r\n    constructor(props){\r\n       super(props);\r\n       //** This state controls the visibility / rendering of the component internally */\r\n       this.state = {\r\n           visible: props.show\r\n        }\r\n    }\r\n\r\n    //** Detect if Text should be white or black */\r\n    hexToRgb = (hex) => {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    isDark = () => {\r\n        if(this.props.bg === null || this.props.bg === undefined){\r\n            return null;\r\n        } else {\r\n            let r = this.hexToRgb(this.props.bg).r;\r\n            let g = this.hexToRgb(this.props.bg).g;\r\n            let b = this.hexToRgb(this.props.bg).b;\r\n            let rgb = \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\r\n\r\n            let match = /rgb\\((\\d+).*?(\\d+).*?(\\d+)\\)/.exec(rgb);\r\n            let result = ( match[1] & 255 )\r\n                + ( match[2] & 255 )\r\n                + ( match[3] & 255 )\r\n                < 3 * 256 / 1.2;\r\n            if(result){\r\n                return \"text-white\";\r\n            } else {\r\n                return \"text-grey\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"alert\",\r\n            this.props.className,\r\n            this.isDark()\r\n        )        \r\n        \r\n        //** Check if Alert is visible */\r\n        if(this.state.visible){\r\n            return (\r\n                <div className={classProps} style={{backgroundColor: this.props.bg}} role=\"alert\">\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n/**\r\n * General WhatsAppButton Element\r\n */\r\nclass WhatsAppButton extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n           visible: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.props.num !== null && this.props.text !== null){\r\n            /** Remove potential + from phone number */\r\n            let phone_wo_sign = this.props.num.replace('+','');\r\n            /** Remove potential ( from phone number */\r\n            let phone_wo_bracket_1 = phone_wo_sign.replace('(','');\r\n            /** Remove potential ) from phone number */\r\n            let phone_wo_bracket_2 = phone_wo_bracket_1.replace(')','');\r\n            /** Remove potential spaces from phone number */\r\n            let phone_wo_spaces = phone_wo_bracket_2.replace(' ','');\r\n            \r\n            /** Create link with url encoded text */\r\n            let link = \"https://api.whatsapp.com/send?phone=\"+phone_wo_spaces+\"&text=\"+encodeURIComponent(this.props.text);\r\n\r\n            //** Set default title */\r\n            let title = \"WhatsApp me!\"\r\n            if(this.props.title !== undefined){\r\n                title = this.props.title;\r\n            }\r\n\r\n            return (\r\n                <a\r\n                    className=\"btn btn-success btn-rounded font-weight-bold mt-3\"\r\n                    href={link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <i className=\"fab fa-whatsapp pr-2\"></i>\r\n                    {title}\r\n                </a>\r\n            )\r\n        } else {\r\n            return (\r\n                null\r\n            )\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default WhatsAppButton\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Additional Frameworks */\r\n//** PayPal */\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport Alert from \"../../../atoms/Alert\";\r\nimport WhatsAppButton from \"../../../atoms/WhatsAppButton\";\r\n\r\nclass Form extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            payment: { success:false, name:\"\" },\r\n            texts: { head: \"Nur noch einen Schritt entfernt!\", sub: \"Zahlungsart wÃ¤hlen\" }\r\n        }\r\n\r\n        this.renderContent = this.renderContent.bind(this);\r\n    }\r\n\r\n    renderContent = () => {\r\n        return(\r\n            <div>\r\n                <h2>{this.state.texts.head}</h2>\r\n                <p className=\"lead mt-3 mb-2\">{this.state.texts.sub}</p>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    {this.state.payment.success === false ? (\r\n                        <div className=\"col-lg-8\">\r\n                            <PayPalButton\r\n                                createOrder={(data, actions) => {\r\n                                return actions.order.create({\r\n                                    purchase_units: [{\r\n                                    amount: {\r\n                                        value: this.props.amount\r\n                                    }\r\n                                    }]\r\n                                });\r\n                                }}\r\n                                onApprove={(data, actions) => {\r\n                                //** Capture the funds from the transaction */\r\n                                return actions.order.capture().then(details => {\r\n                                    //** Save name of customer, if provided */\r\n                                    if(details.payer !== undefined){\r\n                                        if(details.payer.name !== undefined){\r\n                                            if(details.payer.name.given_name !== undefined){\r\n                                                this.setState(prevState => ({\r\n                                                    payment: {\r\n                                                        ...prevState.payment,\r\n                                                        name: details.payer.name.given_name\r\n                                                    },\r\n                                                }));\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    //** If payment was a success */\r\n                                    if(details.status === \"COMPLETED\"){\r\n                                        this.setState(prevState => ({\r\n                                            payment: {\r\n                                                ...prevState.payment,\r\n                                                success: true\r\n                                            },\r\n                                            texts: {\r\n                                                ...prevState.texts,\r\n                                                head: \"\",\r\n                                                sub: \"Herzlichen GlÃ¼ckwunsch zu Ihrem individuellen Beautyprogramm!\"\r\n                                            }\r\n                                        }));\r\n                                    } else {\r\n                                        console.error(\"There was an error during the payment procedure.\");\r\n                                    }\r\n                                });\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Alert show=\"true\" className=\"alert-success\">\r\n                                {this.state.payment.name !== \"\" &&\r\n                                    <p className=\"lead font-weight-bold\">Vielen Dank fÃ¼r Ihre Bestellung, {this.state.payment.name}!</p>\r\n                                }\r\n                                <div dangerouslySetInnerHTML={{__html: this.props.success_msg}}></div>\r\n                            </Alert>\r\n                            <WhatsAppButton text={\"Ich habe gerade euer Paket um EUR \"+this.props.amount+\" gekauft und wÃ¼rde mich gerne mit euch verbinden.\"} num={this.props.wa_num} title=\"Kontakt\" />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return this.renderContent();\r\n    }\r\n}\r\n\r\n//export default injectStripe(Form);\r\nexport default Form;\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\nimport CheckoutForm from './form';\r\n\r\nclass PaymentModal extends React.Component{\r\n    render() {\r\n        let modalID = \"paymentModal\"+this.props.index;\r\n        return (\r\n            <div className=\"modal fade\" id={modalID} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"Registrieren\" aria-hidden=\"true\" data-backdrop=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-lg modal-notify modal-info\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    \r\n                        <div className=\"modal-body\">\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\" className=\"dark-text\">Ã</span>\r\n                        </button>\r\n                            <CheckoutForm amount={this.props.amount} success_msg={this.props.success_msg} wa_num={this.props.wa_num} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentModal;\r\n"],"sourceRoot":""}