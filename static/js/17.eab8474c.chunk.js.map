{"version":3,"sources":["components/atoms/Alert/index.jsx","components/atoms/Checkbox/index.jsx","components/atoms/Input/index.jsx","components/atoms/Button/btn_types.js","components/atoms/Button/btn_styles.js","components/atoms/Button/btn_sizes.js","components/atoms/Button/index.js","components/atoms/FlagIcon/index.jsx","components/organisms/Modals/register/index.jsx"],"names":["Alert","props","_this","Object","C_Users_aichn_Documents_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_aichn_Documents_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_aichn_Documents_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","hexToRgb","hex","result","exec","r","parseInt","g","b","isDark","bg","undefined","match","state","visible","show","classProps","classnames","className","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","style","backgroundColor","role","children","React","Component","Checkbox","rand","Math","floor","random","event","fieldName","target","name","fieldValue","checked","onChange","react_default","type","id","onFieldChange","bind","htmlFor","Input","value","validation","validate","placeholder","ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","cbst","cbt","Button","btnstyle","btntype","size","href","disabled","onClick","react","defaultProps","FlagIcon","FlagIconFactory","useCssModules","CREATE_USER_MUTATION","gql","_templateObject","GET_MODAL_DATA","_templateObject2","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","responseFacebook","response","first_name","setState","prenamelive","last_name","surnamelive","email","emaillive","picture","data","url","accessToken","verified","validateInput","oAuthSuccess","oAuthed","formHidden","sendData","asyncToGenerator","regenerator_default","mark","_callee","formvalues","wrap","_context","prev","next","localStorage","setItem","prename","surname","phone","title","telephone","address","postal_code","city","country","newsletter","register","variables","token","values","then","_ref2","registrationFormPage","showError","showSuccess","buffer","catch","error","console","log","stop","checkTel","phonelive","checkEmail","checkName","handleSubmitForm","preventDefault","push","gdpr","length","pixel","track","handleChange","field","defineProperty","phoneNumber","parsePhoneNumberFromString","formatInternational","number","toLowerCase","trim","EmailValidator","printFlag","atoms_FlagIcon","code","printErrorDialogs","Array","isArray","errors","keys","forEach","element","index","key","printError","editForm","_this2","pages","modaldata","tabIndex","aria-labelledby","aria-hidden","data-backdrop","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","ReactHtmlParser","renderToString","Text","registrationHead","thankYouText","facebook_login_with_button_default","appId","autoLoad","icon","fa","cssClass","fields","textButton","callback","onSubmit","e","atoms_Input","valid1","atoms_Button","valid2","valid3","valid4","atoms_Checkbox","registrationNewsletterText","valid6","registrationPrivacyText","registrationButton","buttonPage","buttonTitle","registrationInfoText","renderContent","compose","graphql","options"],"mappings":"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","file":"static/js/17.eab8474c.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Alert component\r\n */\r\nclass Alert extends React.Component{\r\n    constructor(props){\r\n       super(props);\r\n       //** This state controls the visibility / rendering of the component internally */\r\n       this.state = {\r\n           visible: props.show\r\n        }\r\n    }\r\n\r\n    //** Detect if Text should be white or black */\r\n    hexToRgb = (hex) => {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    isDark = () => {\r\n        if(this.props.bg === null || this.props.bg === undefined){\r\n            return null;\r\n        } else {\r\n            let r = this.hexToRgb(this.props.bg).r;\r\n            let g = this.hexToRgb(this.props.bg).g;\r\n            let b = this.hexToRgb(this.props.bg).b;\r\n            let rgb = \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\r\n\r\n            let match = /rgb\\((\\d+).*?(\\d+).*?(\\d+)\\)/.exec(rgb);\r\n            let result = ( match[1] & 255 )\r\n                + ( match[2] & 255 )\r\n                + ( match[3] & 255 )\r\n                < 3 * 256 / 1.2;\r\n            if(result){\r\n                return \"text-white\";\r\n            } else {\r\n                return \"text-grey\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"alert\",\r\n            this.props.className,\r\n            this.isDark()\r\n        )        \r\n        \r\n        //** Check if Alert is visible */\r\n        if(this.state.visible){\r\n            return (\r\n                <div className={classProps} style={{backgroundColor: this.props.bg}} role=\"alert\">\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Checkbox Component\r\n */\r\nclass Checkbox extends React.Component{\r\n    //** Get a random number for ID purposes - probably better and saver to create unique IDs */\r\n    rand = Math.floor((Math.random() * 1000) + 1);\r\n\r\n    //* Change function (check -> uncheck || uncheck -> check) */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.checked;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-check\",\r\n            this.props.className\r\n        )\r\n\r\n        return (\r\n            <div className={classProps}>\r\n                <input type=\"checkbox\" name={this.props.name} className=\"form-check-input\" id={this.props.name + \"-\" + this.rand} checked={this.props.checked} onChange={this.onFieldChange.bind(this)} />\r\n                <label className=\"form-check-label text-left\" htmlFor={this.props.name + \"-\" + this.rand} >{this.props.children}</label>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Checkbox;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Input Component\r\n */\r\nclass Input extends React.Component{\r\n    //** Change handler */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    //** Validator */\r\n    validate() {\r\n        if(this.props.validation) {\r\n            return \"valid\";\r\n        } else if (this.props.validation === false) {\r\n            return \"invalid\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-control\",\r\n            this.props.className,\r\n            this.validate()\r\n        )\r\n\r\n        return (\r\n           <input className={classProps} type={this.props.type} value={this.props.value} name={this.props.name} placeholder={this.props.placeholder} onChange={this.onFieldChange.bind(this)} />\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Input;\r\n","const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\n//** Preconfigure datatypes */\r\ntype Props = {\r\n    btnstyle: string,\r\n    size: string,\r\n    href: string,\r\n    children: React.Node,\r\n    className: string,\r\n    disabled: boolean\r\n}\r\n\r\n/**\r\n * General Button Element\r\n */\r\nconst Button = (props: Props): React.Element<*> => {\r\n    const { btnstyle, btntype, size, href, children, className, disabled, onClick } = props;\r\n\r\n    //** Combine multiple values for className */\r\n    const classProps: string = classnames(\r\n        \"btn\",\r\n        cbst(btnstyle),\r\n        cbt(btntype),\r\n        cbs(size),\r\n        {\r\n            disabled\r\n        },\r\n        className\r\n    )\r\n\r\n    return (\r\n        <a href={href} className={classProps} onClick={onClick} >\r\n            {children}\r\n        </a>\r\n    )\r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.oWHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false\r\n}\r\n\r\nexport default Button\r\n","// @flow\r\n//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Additional frameworks */\r\nimport FlagIconFactory from 'react-flag-icon-css'\r\n\r\n//** Create new FlagIcon */\r\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false })\r\n\r\nexport default FlagIcon\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Additional Frameworks */\r\n//** Validation */\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\r\nimport * as EmailValidator from 'email-validator';\r\n//** Apollo */\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { gql } from \"apollo-boost\";\r\n//** oAuth */\r\nimport FacebookLogin from 'react-facebook-login';\r\n//import GoogleLogin from 'react-google-login';\r\n\r\n//** Icons */\r\nimport { FaFacebook } from 'react-icons/fa';\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport Checkbox from '../../../atoms/Checkbox';\r\nimport Input from '../../../atoms/Input';\r\nimport Button from '../../../atoms/Button';\r\nimport FlagIcon from '../../../atoms/FlagIcon';\r\nimport Alert from '../../../atoms/Alert';\r\n\r\n//** Helpers */\r\n//** Personalization */\r\nimport Text from \"../../../helper/Text\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\n//** Mutation: Create User */\r\nconst CREATE_USER_MUTATION = gql`\r\n    mutation register($token: String!, $values: GenericScalar!) {\r\n        registrationFormPage(token: $token, url: \"/registration\", values: $values) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//** Mutation: Get Data for Modal */\r\nconst GET_MODAL_DATA = gql`\r\n    query modal(\r\n        $token: String!\r\n    ){\r\n        pages(\r\n            token: $token\r\n        ){\r\n            ... on RegistrationFormPage{\r\n            registrationHead\r\n            registrationInfoText\r\n            registrationNewsletterText\r\n            registrationPrivacyText\r\n            registrationStepText\r\n            thankYouText\r\n            registrationButton{\r\n                buttonTitle\r\n                buttonPage{\r\n                    id\r\n                    urlPath\r\n                }\r\n            }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //** oAuthed = If user is already logged in with Facebook or Google */\r\n        //**  Difference between phone and phonelive (maps to everything else too): */\r\n        //**  Phone is the final state, which is set by the validation-function. Phonelive is the current value of the input field. */\r\n        //** picture is set when provided by Facebook oAuth */\r\n        //** country is gathered from phone number and is required for the flag to show */\r\n        //** verified = If user has proceeded using Facebook oAuth (not that likely to be a bot) */\r\n        //** formHidden = When user proceeds with Facebook oAuth, most data is already known. The name + email form is hidden */\r\n        //** showError / showSuccess = Displays the corresponding messages */\r\n\r\n        this.state = {\r\n           phone: undefined,\r\n           email: undefined,\r\n           prename: undefined,\r\n           surname: undefined,\r\n           country: false,\r\n           picture: undefined,\r\n           gdpr: false,\r\n           newsletter: false,\r\n           showError: false,\r\n           verified: false,\r\n           showSuccess: false,\r\n           oAuthed: false,\r\n           formHidden: false,\r\n           phonelive: \"\",\r\n           emaillive: \"\",\r\n           prenamelive: \"\",\r\n           surnamelive: \"\"\r\n        }\r\n    }\r\n\r\n    //** oAuth response */\r\n    responseFacebook = (response) => {\r\n        if(response.first_name !== undefined && response.first_name !== null){\r\n            this.setState({prenamelive: response.first_name});\r\n        }\r\n        if(response.last_name !== undefined && response.last_name !== null){\r\n            this.setState({surnamelive: response.last_name});\r\n        }\r\n        if(response.email !== undefined && response.email !== null){\r\n            this.setState({emaillive: response.email});\r\n        }\r\n        if(response.picture !== undefined && response.picture !== null){\r\n            this.setState({picture: response.picture.data.url});\r\n        }\r\n        if(response.accessToken !== undefined && response.accessToken !== null){\r\n            this.setState({verified: true});\r\n        }\r\n\r\n        this.validateInput();\r\n        this.oAuthSuccess();\r\n    }\r\n\r\n    //** Google oAuth has been deactivated for now */\r\n    /*responseGoogle = (response) => {\r\n        console.log(response);\r\n    }*/\r\n\r\n    //** oAuth function */\r\n    oAuthSuccess = () => {\r\n        //** Hide oAuth buttons\r\n        this.setState({oAuthed: true});\r\n        this.setState({formHidden: true});\r\n    }\r\n\r\n    //** Send form data - create user with user mutation */\r\n    sendData = async () => {\r\n        //** Set prename localStorgae */\r\n        localStorage.setItem('f_n', this.state.prename);\r\n        localStorage.setItem('f_l', this.state.surname);\r\n        localStorage.setItem('f_e', this.state.email);\r\n        localStorage.setItem('f_p', this.state.phone);\r\n        //** Set values that will be sent */\r\n        let formvalues = {\r\n            \"title\": \"\",\r\n            \"first_name\": this.state.prename,\r\n            \"last_name\": this.state.surname,\r\n            \"email\": this.state.email,\r\n            \"telephone\": this.state.phone,\r\n            \"address\": \"\",\r\n            \"postal_code\": \"\",\r\n            \"city\": \"\",\r\n            \"country\": \"\",\r\n            \"verified\": this.state.verified,\r\n            \"newsletter\": this.state.newsletter\r\n        };\r\n        //** console.log(formvalues); */\r\n        //** Check if the form values have been set (just to be sure) */\r\n        if(formvalues !== null || formvalues !== undefined){\r\n            //** Call graphQL mutation */\r\n            await this.props.register({\r\n                variables: {\r\n                    \"token\": this.props.token,\r\n                    \"values\": formvalues\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                //** Handle response (debug using console.log of data) */\r\n                if(data.registrationFormPage.result === \"OK\"){\r\n                    //** Hide error and show success message */\r\n                    this.setState({showError: false});\r\n                    this.setState({showSuccess: true});\r\n                } else {\r\n                    //** Show error message and hide success message */\r\n                    this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n                    this.setState({showError: true});\r\n                    this.setState({showSuccess: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({buffer: \"Es ist ein unerwarteter Fehler aufgetreten. Bitte versuchen Sie es etwas später erneut.\"})\r\n                this.setState({showError: true});\r\n                this.setState({showSuccess: false});\r\n                console.error(\"Mutation error:\");\r\n                console.log(error);\r\n            })\r\n        } else {\r\n            this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }\r\n    };\r\n\r\n    validateInput = () => {\r\n        this.checkTel(this.state.phonelive);\r\n        this.checkEmail(this.state.emaillive);\r\n        this.checkName(\"surname\",this.state.surnamelive);\r\n        this.checkName(\"prename\",this.state.prenamelive);\r\n    }\r\n\r\n    //** Handle the submit of the modal form */\r\n    handleSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        let error = [];\r\n        let buffer = [];\r\n        \r\n        //** Check inputs and generate errors */\r\n        //** Errors are written to a buffer which is then written to this.state.buffer */\r\n        if(this.state.phone === undefined || this.state.phone === false){\r\n            buffer.push(\"Bitte geben Sie eine Telefonnummer ein.\");\r\n            error.push(1);\r\n        }\r\n        if (this.state.email === false){\r\n            buffer.push(\"Die eingegebene E-Mail Adresse ist ungültig.\");\r\n            error.push(3);\r\n        }\r\n        if (this.state.prename === undefined || this.state.surname === undefined){\r\n            buffer.push(\"Bitte geben Sie Ihren Namen ein.\");\r\n            error.push(4);\r\n        } \r\n        if (this.state.prename === false || this.state.surname === false){\r\n            buffer.push(\"Ihr Name darf keine Sonderzeichen enthalten.\");\r\n            error.push(5);\r\n        } \r\n        if (this.state.gdpr === false){\r\n            buffer.push(\"Bitte beachten Sie die Datenschutzerklärung.\");\r\n            error.push(6);\r\n        }\r\n        if(error !== undefined && error.length > 0){\r\n            //** Write buffer, show error alert and hide success alert */\r\n            this.setState({buffer:buffer});\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }else{\r\n            //** If no errors -> Send the data using a graphQL mutation */\r\n            // Facebook Pixel\r\n            let data = {\r\n                name: this.state.prename + \" \" + this.state.surname,\r\n                email: this.state.email,\r\n                phone: this.state.phone\r\n            }\r\n            this.props.pixel.track( 'CompleteRegistration', data );\r\n            this.sendData();\r\n        };\r\n    }\r\n\r\n    //** Update states with latest input field data + verify inputs */\r\n    handleChange = (field, value) => {\r\n        //** Update live states and check validity in callback */\r\n        switch (field) {\r\n            case 'phone':\r\n                this.setState({phonelive:value}, this.checkTel(value))\r\n                break;\r\n            case 'email':\r\n                this.setState({emaillive:value}, this.checkEmail(value))\r\n                break;\r\n            case 'prename':\r\n                this.setState({prenamelive:value},this.checkName(\"prename\",value))\r\n                break;\r\n            case 'surname':\r\n                this.setState({surnamelive:value},this.checkName(\"surname\",value))\r\n                break;\r\n            case 'newsletter':\r\n                this.setState({newsletter:value})\r\n                break;\r\n            case 'gdpr':\r\n                this.setState({gdpr:value})\r\n                break;\r\n            default:\r\n                this.setState({[field]:value})\r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if phone number is valid */\r\n    checkTel = (value) => {\r\n        if(value !== ''){\r\n            const phoneNumber = parsePhoneNumberFromString(value);\r\n            console.log(phoneNumber);\r\n            if(phoneNumber !== undefined){\r\n                phoneNumber.formatInternational();\r\n                this.setState({phone:phoneNumber.number});\r\n                // Set country\r\n                if(phoneNumber.country !== undefined){\r\n                    this.setState({country:phoneNumber.country.toLowerCase()})\r\n                }\r\n            }else{\r\n                this.setState({country:false})\r\n                this.setState({phone:value.trim()})\r\n            }\r\n        } else {\r\n            this.setState({country:false})\r\n            this.setState({phone:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if E-Mail is valid */\r\n    checkEmail = (value) => {\r\n        if(value !== ''){\r\n            if(EmailValidator.validate(value)){\r\n                this.setState({email:value})\r\n            } else {\r\n                this.setState({email:false})\r\n            }\r\n        } else {\r\n            this.setState({email:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if name contains special chars */\r\n    checkName = (field,value) => {\r\n        if(value.trim() !== \"\"){\r\n            this.setState({[field]:value})\r\n        } else {\r\n            this.setState({[field]:undefined})\r\n        }\r\n    }\r\n\r\n    //** Update flag icon in phone input */\r\n    printFlag = () => {\r\n        if(this.state.country !== false){\r\n            return <FlagIcon code={this.state.country} />\r\n        }\r\n    }\r\n\r\n    printErrorDialogs = () => {\r\n        if(Array.isArray(this.state.buffer)){\r\n            let errors = [];\r\n            let buffer = this.state.buffer;\r\n            Object.keys(buffer).forEach(function (element, index) {\r\n                errors.push(<p key={index}>{buffer[index]}</p>);\r\n            });\r\n            return errors;\r\n        } else {\r\n            return <p>{this.state.buffer}</p>\r\n        }\r\n    }\r\n\r\n    //** Print error Alert component */\r\n    printError = () => {\r\n        //** There have been issues, where printError() was called, but this.state.showError and this.state.buffer was false -> leading to crash */\r\n        if(this.state.showError){\r\n            //** Check if message (buffer) is written. */\r\n            if(this.state.buffer !== null || this.state.buffer !== undefined){\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        {\r\n                            this.printErrorDialogs()\r\n                        }\r\n                    </Alert>\r\n                );\r\n            } else {\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        Unknown error.\r\n                    </Alert>\r\n                );\r\n            }\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //** Show formular for edit */ \r\n    editForm = () => {\r\n        this.setState({formHidden: false});\r\n    }\r\n\r\n    renderContent (){\r\n        \r\n        //** Text data for the modal */ \r\n        if(this.props.data.pages[1] !== undefined){\r\n            let modaldata = (this.props.data.pages[1]);\r\n            //console.log(modaldata);\r\n\r\n            return(\r\n                <div className=\"modal fade\" id=\"registration\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"Registrieren\" aria-hidden=\"true\" data-backdrop=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-lg modal-notify modal-info\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\" className=\"dark-text\">×</span>\r\n                        </button>\r\n                        <div className=\"lead font-weight-bold text-center\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationHead }/>))}}></div>\r\n                        <hr/>\r\n                        {this.state.showSuccess ? (\r\n                            <div className=\"success\">\r\n                                <Alert className=\"alert-success\" show=\"true\">\r\n                                    <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.thankYouText }/>))}}></div>\r\n                                </Alert>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"register-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7\">\r\n                                {!this.state.oAuthed ? (\r\n                                    <div>\r\n                                        <div className=\"oAuth\">\r\n                                        <FacebookLogin\r\n                                                appId=\"438514240304319\"\r\n                                                autoLoad={false}\r\n                                                icon={<FaFacebook/>}\r\n                                                cssClass=\"btn-facebook kep-login-facebook kep-login-facebook-medium\"\r\n                                                fields=\"first_name,last_name,email,picture\"\r\n                                                textButton=\"Weiter mit Facebook\"\r\n                                                callback={this.responseFacebook}\r\n                                            />\r\n                                        \r\n                                            {\r\n                                                //** Google oAuth has been disabled for now */\r\n\r\n                                                /*<GoogleLogin\r\n                                                    clientId=\"762647868786-a6do4s713inonqo663lbgqqgo40u5sen.apps.googleusercontent.com\"\r\n                                                    buttonText=\"Weiter mit Google\"\r\n                                                    className=\"btn-google\"\r\n                                                    onSuccess={this.responseGoogle}\r\n                                                    onFailure={this.responseGoogle}\r\n                                                    cookiePolicy={'single_host_origin'}\r\n                                                />*/\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w-100\">\r\n                                            <div className=\"splitter my-4\"><span className=\"or\"><span className=\"or-text\">oder</span></span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                ):(\r\n                                    <div className=\"alert alert-success mb-4\">\r\n                                        <h4 className=\"font-weight-bold\">Hallo {this.state.prename}!</h4><p>Wir benötigen jetzt nur noch Deine Telefonnummer.</p>\r\n                                    </div>\r\n                                )}\r\n                                    {this.printError()}\r\n                                \r\n                                    <form id=\"form-reg\" onSubmit={(e) => {this.handleSubmitForm(e); e.preventDefault();}}>\r\n                                        <div className=\"input-grp\">\r\n                                            {this.printFlag()}\r\n                                            <i className=\"fas fa-phone\"></i>\r\n                                            <Input className=\"my-3\" type=\"text\" name=\"phone\" placeholder=\"Telefonnummer\" value={this.state.phonelive} validation={this.state.valid1} onChange={this.handleChange.bind(this)}/>\r\n                                        </div>\r\n                                        {!this.state.formHidden ? (\r\n                                        <div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-envelope\"></i>\r\n                                                <Input className=\"my-3\" type=\"email\" name=\"email\" placeholder=\"E-Mail Adresse (optional)\" value={this.state.emaillive} validation={this.state.valid2}  onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"prename\" placeholder=\"Vorname\" value={this.state.prenamelive} validation={this.state.valid3} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"surname\" placeholder=\"Nachname\" value={this.state.surnamelive} validation={this.state.valid4} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        ) : (\r\n                                            <div className=\"alert alert-info register-info alert-data\">\r\n                                                <p className=\"m-0\">\r\n                                                <span className=\"font-weight-bold\">Meine Daten</span><br/>\r\n                                                Name: {this.state.prename} {this.state.surname}<br/>\r\n                                                E-Mail: {this.state.email}<br/>\r\n                                                <Button btnstyle=\"oELEGANT\" size=\"SM\" onClick={this.editForm}>Ändern</Button>\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"text-left mb-3\">\r\n                                        <Checkbox name=\"newsletter\" className=\"my-4\" onChange={this.handleChange.bind(this)}>\r\n                                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationNewsletterText }/>))}}></div>\r\n                                        </Checkbox>\r\n                                        <Checkbox name=\"gdpr\" validation={this.state.valid6} onChange={this.handleChange.bind(this)}>\r\n                                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationPrivacyText }/>))}}></div>\r\n                                        </Checkbox>\r\n                                        </div>\r\n                                        {modaldata.registrationButton.buttonPage !== null &&\r\n                                            <input className=\"btn btn-outline-elegant font-weight-bold\" type=\"submit\" value={modaldata.registrationButton.buttonTitle} />\r\n                                        }   \r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-md-5 text-left\">\r\n                                <Alert className=\"alert-info register-info\" show=\"true\">\r\n                                    <i className=\"far fa-lightbulb fa-2x\"></i>\r\n                                    <div className=\"mt-2 dark-grey-text\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationInfoText }/>))}}></div>\r\n                                </Alert>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        if(this.props.data.pages !== undefined){\r\n            return this.renderContent();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(CREATE_USER_MUTATION, {\r\n        name: 'register'\r\n    }),\r\n    graphql(GET_MODAL_DATA, {\r\n        options: (props) => ({ variables: { \"token\": props.token } })\r\n    })\r\n)(Modal);\r\n"],"sourceRoot":""}