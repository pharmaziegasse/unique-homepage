{"version":3,"sources":["../node_modules/classnames/bind.js","components/atoms/ModalButton/btn_types.js","components/atoms/ModalButton/btn_styles.js","components/atoms/ModalButton/btn_sizes.js","components/atoms/ModalButton/index.js","components/atoms/Alert/index.jsx","components/organisms/SectionContents/individual.js"],"names":["__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","this","Array","isArray","apply","key","call","join","module","exports","default","undefined","ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","classnames","bind","cbst","cbt","String","prototype","replaceAll","str1","str2","ignore","replace","RegExp","Button","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","isModal","exists","param","buttonLink","buttonPage","urlPath","console","error","getClassProps","btnstyle","btntype","size","disabled","className","sendPixel","options","autoConfig","debug","email","localStorage","getItem","advancedMatching","em","ReactPixel","init","track","placement","getUrlPath","state","visible","log","react","onClick","data-toggle","data-target","buttonTitle","href","React","defaultProps","btnhref","Alert","W_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","W_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","W_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","hexToRgb","hex","result","exec","r","parseInt","g","b","isDark","bg","match","show","classProps","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","style","backgroundColor","role","children","Component","__webpack_require__","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_atoms_ModalButton__WEBPACK_IMPORTED_MODULE_1__","_atoms_Alert__WEBPACK_IMPORTED_MODULE_2__","_helper_Text__WEBPACK_IMPORTED_MODULE_3__","react_dom_server__WEBPACK_IMPORTED_MODULE_4__","react_html_parser__WEBPACK_IMPORTED_MODULE_5__","react_html_parser__WEBPACK_IMPORTED_MODULE_5___default","n","SectionContent","rowClass","index","Math","abs","showHead","dangerouslySetInnerHTML","__html","ReactHtmlParser","renderToString","value","heading","paragraph","footer","footercolor","draggable","src","img","alt","btn"],"mappings":"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","file":"static/js/8.a74471d6.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(this && this[arg] || arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(this, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(this && this[key] || key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n\r\n//** React Facebook Pixel */\r\nimport ReactPixel from 'react-facebook-pixel';\r\n\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\nString.prototype.replaceAll = function(str1, str2, ignore) \r\n{\r\n    return this.replace(new RegExp(str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g,\"\\\\$&\"),(ignore?\"gi\":\"g\")),(typeof(str2)==\"string\")?str2.replace(/\\$/g,\"$$$$\"):str2);\r\n} \r\n\r\n/**\r\n * General Button Element\r\n */\r\nclass Button extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            visible: false\r\n        }\r\n    }\r\n\r\n    //** Convert url to Modal */\r\n    isModal = () => {\r\n        if(this.exists()){\r\n            if(this.props.param.buttonLink === null || this.props.param.buttonLink === undefined){\r\n                this.props.param.buttonPage.urlPath = this.props.param.buttonPage.urlPath.replace('/','#');\r\n                return true;\r\n            }\r\n            if(this.props.param.buttonLink !== null && this.props.param.buttonLink !== undefined){\r\n                console.error(\"Link\");\r\n                return false;\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if button should be displayed */\r\n    exists = () => {\r\n        if(this.props.param === undefined || this.props.param === null){\r\n            return false;\r\n        } else {\r\n            if(this.props.param.buttonPage || this.props.param.buttonLink){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //** Combine multiple values for className */\r\n    getClassProps = () => {\r\n        let props = classnames(\r\n            \"btn\",\r\n            \"font-weight-bold\",\r\n            cbst(this.props.btnstyle),\r\n            cbt(this.props.btntype),\r\n            cbs(this.props.size),\r\n            this.props.disabled,\r\n            this.props.className\r\n        )\r\n        return props;\r\n    }\r\n\r\n    sendPixel = () => {\r\n        const options = {\r\n            autoConfig: true, // set pixel's autoConfig\r\n            debug: false, // enable logs\r\n        };\r\n\r\n        let email = localStorage.getItem('f_e');\r\n        // If a user has already registered\r\n        if(email !== undefined && email !== null){\r\n            const advancedMatching = { em: email }; // optional, more info: https://developers.facebook.com/docs/facebook-pixel/pixel-with-ads/conversion-tracking#advanced_match\r\n            ReactPixel.init('398871454084167', advancedMatching, options); // Init Pixel with advanced options\r\n        } else {\r\n            ReactPixel.init('398871454084167', options);\r\n        }\r\n\r\n        ReactPixel.track( 'ViewContent', { placement: 'body' } );\r\n    }\r\n\r\n    getUrlPath = (urlPath) => {\r\n        if(urlPath){\r\n            return \"#\"+urlPath.replaceAll(\"#\", \"_\");\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props.param);\r\n        console.log(this.exists(), this.exists() && this.isModal());\r\n        return (\r\n            <>\r\n                { this.exists() &&\r\n                    <div>\r\n                        {this.isModal() ? (\r\n                                <button onClick={this.sendPixel} data-toggle=\"modal\" data-target={this.getUrlPath(this.props.param.buttonPage.urlPath)} className={this.getClassProps()}>\r\n                                    {this.props.param.buttonTitle}\r\n                                </button>\r\n                            ) : (\r\n                                <a href={this.props.param.buttonLink} className={this.getClassProps()}>\r\n                                    {this.props.param.buttonTitle}\r\n                                </a>\r\n                            )\r\n                        }\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.WHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false,\r\n    buttonLink: null,\r\n    buttonTitle: \"Unnamed\",\r\n    btnhref: \"\"\r\n}\r\n\r\nexport default Button\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Alert component\r\n */\r\nclass Alert extends React.Component{\r\n    constructor(props){\r\n       super(props);\r\n       //** This state controls the visibility / rendering of the component internally */\r\n       this.state = {\r\n           visible: props.show\r\n        }\r\n    }\r\n\r\n    //** Detect if Text should be white or black */\r\n    hexToRgb = (hex) => {\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    isDark = () => {\r\n        if(this.props.bg === null || this.props.bg === undefined){\r\n            return null;\r\n        } else {\r\n            let r = this.hexToRgb(this.props.bg).r;\r\n            let g = this.hexToRgb(this.props.bg).g;\r\n            let b = this.hexToRgb(this.props.bg).b;\r\n            let rgb = \"rgb(\"+r+\",\"+g+\",\"+b+\")\";\r\n\r\n            let match = /rgb\\((\\d+).*?(\\d+).*?(\\d+)\\)/.exec(rgb);\r\n            let result = ( match[1] & 255 )\r\n                + ( match[2] & 255 )\r\n                + ( match[3] & 255 )\r\n                < 3 * 256 / 1.2;\r\n            if(result){\r\n                return \"text-white\";\r\n            } else {\r\n                return \"text-grey\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"alert\",\r\n            this.props.className,\r\n            this.isDark()\r\n        )        \r\n        \r\n        //** Check if Alert is visible */\r\n        if(this.state.visible){\r\n            return (\r\n                <div className={classProps} style={{backgroundColor: this.props.bg}} role=\"alert\">\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport ModalBtn from \"../../atoms/ModalButton\";\r\nimport Alert from \"../../atoms/Alert\";\r\n\r\n//** Helpers */\r\n//** Personalization */\r\nimport Text from \"../../helper/Text\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\n/**\r\n * Section: Individual\r\n */\r\nconst SectionContent = (props: Props): React.Element<*> => {\r\n    //** Basic functions */\r\n    function isOdd (i) {\r\n        return Math.abs(i % 2) === 1;\r\n    }\r\n\r\n    let rowClass = \"row my-5 d-flex\";\r\n    if(props.index !== undefined){\r\n        if(isOdd(props.index)){\r\n            //** Image is right */\r\n            //** Using the Flex Box flex-direction property to swap positions of the two columns */\r\n            rowClass += \" flex-row-reverse\";\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"container text-left\">\r\n            {props.showHead === true &&\r\n                <h2 className=\"font-weight-bold\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ props.heading }/>))}}></h2>\r\n            }\r\n            <div className={rowClass}>\r\n                <div className=\"col-md-6\">\r\n                    <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ props.paragraph }/>))}}></div>\r\n                    {props.footer !== null &&\r\n                        <Alert show=\"true\" bg={props.footercolor} >{ReactHtmlParser(renderToString(<Text value={ props.footer }/>))}</Alert>\r\n                    }\r\n                    \r\n                </div>\r\n                <div className=\"col-md-6 text-center\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-5\"><img draggable=\"false\" className=\"img-fluid\" src={\"https://pharmaziegasse.at\"+props.img} alt=\"Beautyprogramm starten\"/></div>\r\n                        <div className=\"col-12\">\r\n                            <ModalBtn param={props.btn} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionContent\r\n"],"sourceRoot":""}