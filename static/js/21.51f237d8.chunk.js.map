{"version":3,"sources":["components/atoms/Checkbox/index.jsx","components/atoms/Input/index.jsx","components/atoms/Button/btn_types.js","components/atoms/Button/btn_styles.js","components/atoms/Button/btn_sizes.js","components/atoms/Button/index.js","components/atoms/FlagIcon/index.jsx","components/atoms/Alert/index.jsx","components/organisms/Modals/register/index.jsx"],"names":["Checkbox","rand","Math","floor","random","event","fieldName","target","name","fieldValue","checked","this","props","onChange","classProps","classnames","className","react_default","a","createElement","type","id","onFieldChange","bind","htmlFor","children","React","Component","Input","value","validation","validate","placeholder","ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","cbst","cbt","Button","btnstyle","btntype","size","href","disabled","onClick","react","defaultProps","FlagIcon","FlagIconFactory","useCssModules","Alert","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","visible","show","role","CREATE_USER_MUTATION","gql","_templateObject","GET_MODAL_DATA","_templateObject2","Modal","responseFacebook","response","undefined","first_name","setState","prenamelive","last_name","surnamelive","email","emaillive","picture","data","url","accessToken","verified","validateInput","oAuthSuccess","oAuthed","formHidden","sendData","asyncToGenerator","regenerator_default","mark","_callee","formvalues","wrap","_context","prev","next","title","prename","surname","telephone","phone","address","zip_code","city","country","newsletter","register","variables","token","values","then","_ref2","registrationFormPage","result","showError","showSuccess","buffer","catch","error","console","log","stop","checkTel","phonelive","checkEmail","checkName","handleSubmitForm","preventDefault","push","gdpr","length","handleChange","field","defineProperty","phoneNumber","parsePhoneNumberFromString","formatInternational","number","toLowerCase","EmailValidator","test","printFlag","atoms_FlagIcon","code","printErrorDialogs","Array","isArray","errors","keys","forEach","element","index","key","printError","atoms_Alert","editForm","_this2","pages","modaldata","tabIndex","aria-labelledby","aria-hidden","data-backdrop","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","registrationHead","thankYouText","facebook_login_with_button_default","appId","autoLoad","icon","fa","cssClass","fields","textButton","callback","onSubmit","e","atoms_Input","valid1","atoms_Button","valid2","valid3","valid4","atoms_Checkbox","registrationNewsletterText","valid6","registrationPrivacyText","registrationButton","buttonPage","buttonTitle","registrationInfoText","renderContent","compose","graphql","options"],"mappings":"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","file":"static/js/21.51f237d8.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Checkbox Component\r\n */\r\nclass Checkbox extends React.Component{\r\n    //** Get a random number for ID purposes - probably better and saver to create unique IDs */\r\n    rand = Math.floor((Math.random() * 1000) + 1);\r\n\r\n    //* Change function (check -> uncheck || uncheck -> check) */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.checked;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-check\",\r\n            this.props.className\r\n        )\r\n\r\n        return (\r\n            <div className={classProps}>\r\n                <input type=\"checkbox\" name={this.props.name} className=\"form-check-input\" id={this.props.name + \"-\" + this.rand} checked={this.props.checked} onChange={this.onFieldChange.bind(this)} />\r\n                <label className=\"form-check-label text-left\" htmlFor={this.props.name + \"-\" + this.rand} >{this.props.children}</label>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Checkbox;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Input Component\r\n */\r\nclass Input extends React.Component{\r\n    //** Change handler */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    //** Validator */\r\n    validate() {\r\n        if(this.props.validation) {\r\n            return \"valid\";\r\n        } else if (this.props.validation === false) {\r\n            return \"invalid\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-control\",\r\n            this.props.className,\r\n            this.validate()\r\n        )\r\n\r\n        return (\r\n           <input className={classProps} type={this.props.type} value={this.props.value} name={this.props.name} placeholder={this.props.placeholder} onChange={this.onFieldChange.bind(this)} />\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Input;\r\n","const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\n//** Preconfigure datatypes */\r\ntype Props = {\r\n    btnstyle: string,\r\n    size: string,\r\n    href: string,\r\n    children: React.Node,\r\n    className: string,\r\n    disabled: boolean\r\n}\r\n\r\n/**\r\n * General Button Element\r\n */\r\nconst Button = (props: Props): React.Element<*> => {\r\n    const { btnstyle, btntype, size, href, children, className, disabled, onClick } = props;\r\n\r\n    //** Combine multiple values for className */\r\n    const classProps: string = classnames(\r\n        \"btn\",\r\n        cbst(btnstyle),\r\n        cbt(btntype),\r\n        cbs(size),\r\n        {\r\n            disabled\r\n        },\r\n        className\r\n    )\r\n\r\n    return (\r\n        <a href={href} className={classProps} onClick={onClick} >\r\n            {children}\r\n        </a>\r\n    )\r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.oWHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false\r\n}\r\n\r\nexport default Button\r\n","// @flow\r\n//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Additional frameworks */\r\nimport FlagIconFactory from 'react-flag-icon-css'\r\n\r\n//** Create new FlagIcon */\r\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false })\r\n\r\nexport default FlagIcon\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Alert component\r\n */\r\nclass Alert extends React.Component{\r\n    constructor(props){\r\n       super(props);\r\n       //** This state controls the visibility / rendering of the component internally */\r\n       this.state = {\r\n           visible: props.show\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"alert\",\r\n            this.props.className\r\n        )        \r\n        \r\n        //** Check if Alert is visible */\r\n        if(this.state.visible){\r\n            return (\r\n                <div className={classProps} role=\"alert\">\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Additional Frameworks */\r\n//** Validation */\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\r\nimport * as EmailValidator from 'email-validator';\r\n//** Apollo */\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { gql } from \"apollo-boost\";\r\n//** oAuth */\r\nimport FacebookLogin from 'react-facebook-login';\r\n//import GoogleLogin from 'react-google-login';\r\n\r\n//** Icons */\r\nimport { FaFacebook } from 'react-icons/fa';\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport Checkbox from '../../../atoms/Checkbox'\r\nimport Input from '../../../atoms/Input'\r\nimport Button from '../../../atoms/Button'\r\nimport FlagIcon from '../../../atoms/FlagIcon'\r\nimport Alert from '../../../atoms/Alert'\r\n\r\n//** Mutation: Create User */\r\nconst CREATE_USER_MUTATION = gql`\r\n    mutation register($token: String!, $values: GenericScalar!) {\r\n        registrationFormPage(token: $token, url: \"/registration\", values: $values) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//** Mutation: Get Data for Modal */\r\nconst GET_MODAL_DATA = gql`\r\n    query modal(\r\n        $token: String!\r\n    ){\r\n        pages(\r\n            token: $token\r\n        ){\r\n            ... on RegistrationFormPage{\r\n            registrationHead\r\n            registrationInfoText\r\n            registrationNewsletterText\r\n            registrationPrivacyText\r\n            registrationStepText\r\n            thankYouText\r\n            registrationButton{\r\n                buttonTitle\r\n                buttonPage{\r\n                    id\r\n                    urlPath\r\n                }\r\n            }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //** oAuthed = If user is already logged in with Facebook or Google */\r\n        //**  Difference between phone and phonelive (maps to everything else too): */\r\n        //**  Phone is the final state, which is set by the validation-function. Phonelive is the current value of the input field. */\r\n        //** picture is set when provided by Facebook oAuth */\r\n        //** country is gathered from phone number and is required for the flag to show */\r\n        //** verified = If user has proceeded using Facebook oAuth (not that likely to be a bot) */\r\n        //** formHidden = When user proceeds with Facebook oAuth, most data is already known. The name + email form is hidden */\r\n        //** showError / showSuccess = Displays the corresponding messages */\r\n\r\n        this.state = {\r\n           phone: undefined,\r\n           email: undefined,\r\n           prename: undefined,\r\n           surname: undefined,\r\n           country: false,\r\n           picture: undefined,\r\n           gdpr: false,\r\n           newsletter: false,\r\n           showError: false,\r\n           verified: false,\r\n           showSuccess: false,\r\n           oAuthed: false,\r\n           formHidden: false,\r\n           phonelive: \"\",\r\n           emaillive: \"\",\r\n           prenamelive: \"\",\r\n           surnamelive: \"\"\r\n        }\r\n    }\r\n\r\n    //** oAuth response */\r\n    responseFacebook = (response) => {\r\n        if(response.first_name !== undefined && response.first_name !== null){\r\n            this.setState({prenamelive: response.first_name});\r\n        }\r\n        if(response.last_name !== undefined && response.last_name !== null){\r\n            this.setState({surnamelive: response.last_name});\r\n        }\r\n        if(response.email !== undefined && response.email !== null){\r\n            this.setState({emaillive: response.email});\r\n        }\r\n        if(response.picture !== undefined && response.picture !== null){\r\n            this.setState({picture: response.picture.data.url});\r\n        }\r\n        if(response.accessToken !== undefined && response.accessToken !== null){\r\n            this.setState({verified: true});\r\n        }\r\n\r\n        this.validateInput();\r\n        this.oAuthSuccess();\r\n    }\r\n\r\n    //** Google oAuth has been deactivated for now */\r\n    /*responseGoogle = (response) => {\r\n        console.log(response);\r\n    }*/\r\n\r\n    //** oAuth function */\r\n    oAuthSuccess = () => {\r\n        //** Hide oAuth buttons\r\n        this.setState({oAuthed: true});\r\n        this.setState({formHidden: true});\r\n    }\r\n\r\n    //** Send form data - create user with user mutation */\r\n    sendData = async () => {\r\n        //** New */\r\n        //** Set values that will be sent */\r\n        let formvalues = {\r\n            \"title\": \"\",\r\n            \"first_name\": this.state.prename,\r\n            \"last_name\": this.state.surname,\r\n            \"email\": this.state.email,\r\n            \"telephone\": this.state.phone,\r\n            \"address\": \"\",\r\n            \"zip_code\": \"\",\r\n            \"city\": \"\",\r\n            \"country\": \"\",\r\n            \"verified\": this.state.verified,\r\n            \"newsletter\": this.state.newsletter\r\n        };\r\n        //** console.log(formvalues); */\r\n        //** Check if the form values have been set (just to be sure) */\r\n        if(formvalues !== null || formvalues !== undefined){\r\n            //** Call graphQL mutation */\r\n            await this.props.register({\r\n                variables: {\r\n                    \"token\": this.props.token,\r\n                    \"values\": formvalues\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                //** Handle response (debug using console.log of data) */\r\n                if(data.registrationFormPage.result === \"OK\"){\r\n                    //** Hide error and show success message */\r\n                    this.setState({showError: false});\r\n                    this.setState({showSuccess: true});\r\n                } else {\r\n                    //** Show error message and hide success message */\r\n                    this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n                    this.setState({showError: true});\r\n                    this.setState({showSuccess: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({buffer: \"Es ist ein unerwarteter Fehler aufgetreten. Bitte versuchen Sie es etwas später erneut.\"})\r\n                this.setState({showError: true});\r\n                this.setState({showSuccess: false});\r\n                console.error(\"Mutation error:\");\r\n                console.log(error);\r\n            })\r\n        } else {\r\n            this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }\r\n    };\r\n\r\n    validateInput = () => {\r\n        this.checkTel(this.state.phonelive);\r\n        this.checkEmail(this.state.emaillive);\r\n        this.checkName(\"surname\",this.state.surnamelive);\r\n        this.checkName(\"prename\",this.state.prenamelive);\r\n    }\r\n\r\n    //** Handle the submit of the modal form */\r\n    handleSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        let error = [];\r\n        let buffer = [];\r\n        \r\n        //** Check inputs and generate errors */\r\n        //** Errors are written to a buffer which is then written to this.state.buffer */\r\n        if(this.state.phone === undefined){\r\n            buffer.push(\"Bitte geben Sie eine Telefonnummer ein.\");\r\n            error.push(1);\r\n        } else {\r\n            if(this.state.phone === false){\r\n                buffer.push(\"Bitte geben Sie Ihre Vorwahl Ihres Landes an. (z.B. +43)\");\r\n                error.push(2);\r\n            }\r\n        }\r\n        if (this.state.email === false){\r\n            buffer.push(\"Die eingegebene E-Mail Adresse ist ungültig.\");\r\n            error.push(3);\r\n        }\r\n        if (this.state.prename === undefined || this.state.surname === undefined){\r\n            buffer.push(\"Bitte geben Sie Ihren Namen ein.\");\r\n            error.push(4);\r\n        } \r\n        if (this.state.prename === false || this.state.surname === false){\r\n            buffer.push(\"Ihr Name darf keine Sonderzeichen enthalten.\");\r\n            error.push(5);\r\n        } \r\n        if (this.state.gdpr === false){\r\n            buffer.push(\"Bitte beachten Sie die Datenschutzerklärung.\");\r\n            error.push(6);\r\n        }\r\n        if(error !== undefined && error.length > 0){\r\n            //** Write buffer, show error alert and hide success alert */\r\n            this.setState({buffer:buffer});\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }else{\r\n            //** If no errors -> Send the data using a graphQL mutation */\r\n            this.sendData();\r\n        };\r\n    }\r\n\r\n    //** Update states with latest input field data + verify inputs */\r\n    handleChange = (field, value) => {\r\n        //** Update live states and check validity in callback */\r\n        switch (field) {\r\n            case 'phone':\r\n                this.setState({phonelive:value}, this.checkTel(value))\r\n                break;\r\n            case 'email':\r\n                this.setState({emaillive:value}, this.checkEmail(value))\r\n                break;\r\n            case 'prename':\r\n                this.setState({prenamelive:value},this.checkName(\"prename\",value))\r\n                break;\r\n            case 'surname':\r\n                this.setState({surnamelive:value},this.checkName(\"surname\",value))\r\n                break;\r\n            case 'newsletter':\r\n                this.setState({newsletter:value})\r\n                break;\r\n            case 'gdpr':\r\n                this.setState({gdpr:value})\r\n                break;\r\n            default:\r\n                this.setState({[field]:value})\r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if phone number is valid */\r\n    checkTel = (value) => {\r\n        if(value !== ''){\r\n            const phoneNumber = parsePhoneNumberFromString(value);\r\n            if(phoneNumber !== undefined){\r\n                phoneNumber.formatInternational();\r\n                if(phoneNumber.country !== undefined){\r\n                    this.setState({phone:phoneNumber.number})\r\n                    this.setState({country:phoneNumber.country.toLowerCase()})\r\n                }else{\r\n                    this.setState({country:false})\r\n                    this.setState({phone:false})\r\n                }\r\n                \r\n            }else{\r\n                this.setState({country:false})\r\n                this.setState({phone:false})\r\n            }\r\n        } else {\r\n            this.setState({country:false})\r\n            this.setState({phone:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if E-Mail is valid */\r\n    checkEmail = (value) => {\r\n        if(value !== ''){\r\n            if(EmailValidator.validate(value)){\r\n                this.setState({email:value})\r\n            } else {\r\n                this.setState({email:false})\r\n            }\r\n        } else {\r\n            this.setState({email:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if name contains special chars */\r\n    checkName = (field,value) => {\r\n        let format = /[ !@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?]/;\r\n        if(format.test(value) === false){\r\n            if(value !== \"\"){\r\n                this.setState({[field]:value})\r\n            } else {\r\n                this.setState({[field]:undefined})\r\n            }\r\n            \r\n        }else{\r\n            this.setState({[field]:false})\r\n        }\r\n    }\r\n\r\n    //** Update flag icon in phone input */\r\n    printFlag = () => {\r\n        if(this.state.country !== false){\r\n            return <FlagIcon code={this.state.country} />\r\n        }\r\n    }\r\n\r\n    printErrorDialogs = () => {\r\n        console.log(this.state.buffer);\r\n        if(Array.isArray(this.state.buffer)){\r\n            let errors = [];\r\n            let buffer = this.state.buffer;\r\n            Object.keys(buffer).forEach(function (element, index) {\r\n                errors.push(<p key={index}>{buffer[index]}</p>);\r\n            });\r\n            return errors;\r\n        } else {\r\n            return <p>{this.state.buffer}</p>\r\n        }\r\n    }\r\n\r\n    //** Print error Alert component */\r\n    printError = () => {\r\n        //** There have been issues, where printError() was called, but this.state.showError and this.state.buffer was false -> leading to crash */\r\n        if(this.state.showError){\r\n            //** Check if message (buffer) is written. */\r\n            if(this.state.buffer !== null || this.state.buffer !== undefined){\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        {\r\n                            this.printErrorDialogs()\r\n                        }\r\n                    </Alert>\r\n                );\r\n            } else {\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        Unknown error.\r\n                    </Alert>\r\n                );\r\n            }\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //** Show formular for edit */ \r\n    editForm = () => {\r\n        this.setState({formHidden: false});\r\n    }\r\n\r\n    renderContent (){\r\n        \r\n        //** Text data for the modal */ \r\n        if(this.props.data.pages[1] !== undefined){\r\n            let modaldata = (this.props.data.pages[1]);\r\n            console.log(modaldata);\r\n\r\n            return(\r\n                <div className=\"modal fade\" id=\"registration\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"Registrieren\" aria-hidden=\"true\" data-backdrop=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-lg modal-notify modal-info\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\" className=\"dark-text\">×</span>\r\n                        </button>\r\n                        <div className=\"lead font-weight-bold text-center\" dangerouslySetInnerHTML={{__html: modaldata.registrationHead}}></div>\r\n                        <hr/>\r\n                        {this.state.showSuccess ? (\r\n                            <div className=\"success\">\r\n                                <Alert className=\"alert-success\" show=\"true\">\r\n                                    <div dangerouslySetInnerHTML={{__html: modaldata.thankYouText}}></div>\r\n                                </Alert>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"register-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7\">\r\n                                {!this.state.oAuthed ? (\r\n                                    <div>\r\n                                        <div className=\"oAuth\">\r\n                                        <FacebookLogin\r\n                                                appId=\"438514240304319\"\r\n                                                autoLoad={false}\r\n                                                icon={<FaFacebook/>}\r\n                                                cssClass=\"btn-facebook kep-login-facebook kep-login-facebook-medium\"\r\n                                                fields=\"first_name,last_name,email,picture\"\r\n                                                textButton=\"Weiter mit Facebook\"\r\n                                                callback={this.responseFacebook}\r\n                                            />\r\n                                        \r\n                                            {\r\n                                                //** Google oAuth has been disabled for now */\r\n\r\n                                                /*<GoogleLogin\r\n                                                    clientId=\"762647868786-a6do4s713inonqo663lbgqqgo40u5sen.apps.googleusercontent.com\"\r\n                                                    buttonText=\"Weiter mit Google\"\r\n                                                    className=\"btn-google\"\r\n                                                    onSuccess={this.responseGoogle}\r\n                                                    onFailure={this.responseGoogle}\r\n                                                    cookiePolicy={'single_host_origin'}\r\n                                                />*/\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w-100\">\r\n                                            <div className=\"splitter my-4\"><span className=\"or\"><span className=\"or-text\">oder</span></span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                ):(\r\n                                    <div className=\"alert alert-success mb-4\">\r\n                                        <h4 className=\"font-weight-bold\">Hallo {this.state.prename}!</h4><p>Wir benötigen jetzt nur noch Deine Telefonnummer.</p>\r\n                                    </div>\r\n                                )}\r\n                                    {this.printError()}\r\n                                \r\n                                    <form id=\"form-reg\" onSubmit={(e) => {this.handleSubmitForm(e); e.preventDefault();}}>\r\n                                        <div className=\"input-grp\">\r\n                                            {this.printFlag()}\r\n                                            <i className=\"fas fa-phone\"></i>\r\n                                            <Input className=\"my-3\" type=\"text\" name=\"phone\" placeholder=\"Telefonnummer\" value={this.state.phonelive} validation={this.state.valid1} onChange={this.handleChange.bind(this)}/>\r\n                                        </div>\r\n                                        {!this.state.formHidden ? (\r\n                                        <div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-envelope\"></i>\r\n                                                <Input className=\"my-3\" type=\"email\" name=\"email\" placeholder=\"E-Mail Adresse (optional)\" value={this.state.emaillive} validation={this.state.valid2}  onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"prename\" placeholder=\"Vorname\" value={this.state.prenamelive} validation={this.state.valid3} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"surname\" placeholder=\"Nachname\" value={this.state.surnamelive} validation={this.state.valid4} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        ) : (\r\n                                            <div className=\"alert alert-info register-info alert-data\">\r\n                                                <p className=\"m-0\">\r\n                                                <span className=\"font-weight-bold\">Meine Daten</span><br/>\r\n                                                Name: {this.state.prename} {this.state.surname}<br/>\r\n                                                E-Mail: {this.state.email}<br/>\r\n                                                <Button btnstyle=\"oELEGANT\" size=\"SM\" onClick={this.editForm}>Ändern</Button>\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"text-left mb-3\">\r\n                                        <Checkbox name=\"newsletter\" className=\"my-4\" onChange={this.handleChange.bind(this)}><div dangerouslySetInnerHTML={{__html: modaldata.registrationNewsletterText}}></div></Checkbox>\r\n                                        <Checkbox name=\"gdpr\" validation={this.state.valid6} onChange={this.handleChange.bind(this)}><div dangerouslySetInnerHTML={{__html: modaldata.registrationPrivacyText}}></div></Checkbox>\r\n                                        </div>\r\n                                        {modaldata.registrationButton.buttonPage !== null &&\r\n                                            <input className=\"btn btn-outline-elegant font-weight-bold\" type=\"submit\" value={modaldata.registrationButton.buttonTitle} />\r\n                                        }   \r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-md-5 text-left\">\r\n                                <Alert className=\"alert-info register-info\" show=\"true\">\r\n                                    <i className=\"far fa-lightbulb fa-2x\"></i>\r\n                                    <div className=\"mt-2 dark-grey-text\" dangerouslySetInnerHTML={{__html: modaldata.registrationInfoText}}></div>\r\n                                </Alert>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        if(this.props.data.pages !== undefined){\r\n            return this.renderContent();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(CREATE_USER_MUTATION, {\r\n        name: 'register'\r\n    }),\r\n    graphql(GET_MODAL_DATA, {\r\n        options: (props) => ({ variables: { \"token\": props.token } })\r\n    })\r\n)(Modal);\r\n"],"sourceRoot":""}