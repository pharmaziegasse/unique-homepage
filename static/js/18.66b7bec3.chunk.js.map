{"version":3,"sources":["components/atoms/Alert/index.jsx","components/atoms/Checkbox/index.jsx","components/atoms/Input/index.jsx","components/atoms/Button/btn_types.js","components/atoms/Button/btn_styles.js","components/atoms/Button/btn_sizes.js","components/atoms/Button/index.js","components/atoms/FlagIcon/index.jsx","components/organisms/Modals/register/index.jsx"],"names":["Alert","props","_this","Object","C_Users_aichn_Documents_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_aichn_Documents_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_aichn_Documents_unique_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","visible","show","classProps","classnames","className","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","role","children","React","Component","Checkbox","rand","Math","floor","random","event","fieldName","target","name","fieldValue","checked","onChange","react_default","type","id","onFieldChange","bind","htmlFor","Input","value","validation","validate","placeholder","ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","cbst","cbt","Button","btnstyle","btntype","size","href","disabled","onClick","react","defaultProps","FlagIcon","FlagIconFactory","useCssModules","CREATE_USER_MUTATION","gql","_templateObject","GET_MODAL_DATA","_templateObject2","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","responseFacebook","response","undefined","first_name","setState","prenamelive","last_name","surnamelive","email","emaillive","picture","data","url","accessToken","verified","validateInput","oAuthSuccess","oAuthed","formHidden","sendData","asyncToGenerator","regenerator_default","mark","_callee","formvalues","wrap","_context","prev","next","localStorage","setItem","prename","surname","phone","title","telephone","address","postal_code","city","country","newsletter","register","variables","token","values","then","_ref2","registrationFormPage","result","showError","showSuccess","buffer","catch","error","console","log","stop","checkTel","phonelive","checkEmail","checkName","handleSubmitForm","preventDefault","push","gdpr","length","handleChange","field","defineProperty","phoneNumber","parsePhoneNumberFromString","formatInternational","number","toLowerCase","EmailValidator","test","printFlag","atoms_FlagIcon","code","printErrorDialogs","Array","isArray","errors","keys","forEach","element","index","key","printError","editForm","_this2","pages","modaldata","tabIndex","aria-labelledby","aria-hidden","data-backdrop","data-dismiss","aria-label","dangerouslySetInnerHTML","__html","ReactHtmlParser","renderToString","Text","registrationHead","thankYouText","facebook_login_with_button_default","appId","autoLoad","icon","fa","cssClass","fields","textButton","callback","onSubmit","e","atoms_Input","valid1","atoms_Button","valid2","valid3","valid4","atoms_Checkbox","registrationNewsletterText","valid6","registrationPrivacyText","registrationButton","buttonPage","buttonTitle","registrationInfoText","renderContent","compose","graphql","options"],"mappings":"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","file":"static/js/18.66b7bec3.chunk.js","sourcesContent":["//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Alert component\r\n */\r\nclass Alert extends React.Component{\r\n    constructor(props){\r\n       super(props);\r\n       //** This state controls the visibility / rendering of the component internally */\r\n       this.state = {\r\n           visible: props.show\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"alert\",\r\n            this.props.className\r\n        )        \r\n        \r\n        //** Check if Alert is visible */\r\n        if(this.state.visible){\r\n            return (\r\n                <div className={classProps} role=\"alert\">\r\n                    {this.props.children}\r\n                </div>\r\n            );\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nexport default Alert;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Checkbox Component\r\n */\r\nclass Checkbox extends React.Component{\r\n    //** Get a random number for ID purposes - probably better and saver to create unique IDs */\r\n    rand = Math.floor((Math.random() * 1000) + 1);\r\n\r\n    //* Change function (check -> uncheck || uncheck -> check) */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.checked;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-check\",\r\n            this.props.className\r\n        )\r\n\r\n        return (\r\n            <div className={classProps}>\r\n                <input type=\"checkbox\" name={this.props.name} className=\"form-check-input\" id={this.props.name + \"-\" + this.rand} checked={this.props.checked} onChange={this.onFieldChange.bind(this)} />\r\n                <label className=\"form-check-label text-left\" htmlFor={this.props.name + \"-\" + this.rand} >{this.props.children}</label>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Checkbox;\r\n","//** Standard Frameworks */\r\nimport React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n/**\r\n * General Input Component\r\n */\r\nclass Input extends React.Component{\r\n    //** Change handler */\r\n    onFieldChange(event) {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n        this.props.onChange(fieldName, fieldValue);\r\n    }\r\n\r\n    //** Validator */\r\n    validate() {\r\n        if(this.props.validation) {\r\n            return \"valid\";\r\n        } else if (this.props.validation === false) {\r\n            return \"invalid\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //** Combine multiple values for className */\r\n        const classProps: string = classnames(\r\n            \"form-control\",\r\n            this.props.className,\r\n            this.validate()\r\n        )\r\n\r\n        return (\r\n           <input className={classProps} type={this.props.type} value={this.props.value} name={this.props.name} placeholder={this.props.placeholder} onChange={this.onFieldChange.bind(this)} />\r\n        );\r\n    }\r\n    \r\n};\r\n\r\nexport default Input;\r\n","const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\n//** Preconfigure datatypes */\r\ntype Props = {\r\n    btnstyle: string,\r\n    size: string,\r\n    href: string,\r\n    children: React.Node,\r\n    className: string,\r\n    disabled: boolean\r\n}\r\n\r\n/**\r\n * General Button Element\r\n */\r\nconst Button = (props: Props): React.Element<*> => {\r\n    const { btnstyle, btntype, size, href, children, className, disabled, onClick } = props;\r\n\r\n    //** Combine multiple values for className */\r\n    const classProps: string = classnames(\r\n        \"btn\",\r\n        cbst(btnstyle),\r\n        cbt(btntype),\r\n        cbs(size),\r\n        {\r\n            disabled\r\n        },\r\n        className\r\n    )\r\n\r\n    return (\r\n        <a href={href} className={classProps} onClick={onClick} >\r\n            {children}\r\n        </a>\r\n    )\r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.oWHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false\r\n}\r\n\r\nexport default Button\r\n","// @flow\r\n//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Additional frameworks */\r\nimport FlagIconFactory from 'react-flag-icon-css'\r\n\r\n//** Create new FlagIcon */\r\nconst FlagIcon = FlagIconFactory(React, { useCssModules: false })\r\n\r\nexport default FlagIcon\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Additional Frameworks */\r\n//** Validation */\r\nimport { parsePhoneNumberFromString } from 'libphonenumber-js'\r\nimport * as EmailValidator from 'email-validator';\r\n//** Apollo */\r\nimport { graphql, compose } from 'react-apollo';\r\nimport { gql } from \"apollo-boost\";\r\n//** oAuth */\r\nimport FacebookLogin from 'react-facebook-login';\r\n//import GoogleLogin from 'react-google-login';\r\n\r\n//** Icons */\r\nimport { FaFacebook } from 'react-icons/fa';\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport Checkbox from '../../../atoms/Checkbox';\r\nimport Input from '../../../atoms/Input';\r\nimport Button from '../../../atoms/Button';\r\nimport FlagIcon from '../../../atoms/FlagIcon';\r\nimport Alert from '../../../atoms/Alert';\r\n\r\n//** Helpers */\r\n//** Personalization */\r\nimport Text from \"../../../helper/Text\";\r\nimport { renderToString } from 'react-dom/server';\r\nimport ReactHtmlParser from 'react-html-parser'; \r\n\r\n//** Mutation: Create User */\r\nconst CREATE_USER_MUTATION = gql`\r\n    mutation register($token: String!, $values: GenericScalar!) {\r\n        registrationFormPage(token: $token, url: \"/registration\", values: $values) {\r\n            result\r\n            errors {\r\n            name\r\n            errors\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n//** Mutation: Get Data for Modal */\r\nconst GET_MODAL_DATA = gql`\r\n    query modal(\r\n        $token: String!\r\n    ){\r\n        pages(\r\n            token: $token\r\n        ){\r\n            ... on RegistrationFormPage{\r\n            registrationHead\r\n            registrationInfoText\r\n            registrationNewsletterText\r\n            registrationPrivacyText\r\n            registrationStepText\r\n            thankYouText\r\n            registrationButton{\r\n                buttonTitle\r\n                buttonPage{\r\n                    id\r\n                    urlPath\r\n                }\r\n            }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //** oAuthed = If user is already logged in with Facebook or Google */\r\n        //**  Difference between phone and phonelive (maps to everything else too): */\r\n        //**  Phone is the final state, which is set by the validation-function. Phonelive is the current value of the input field. */\r\n        //** picture is set when provided by Facebook oAuth */\r\n        //** country is gathered from phone number and is required for the flag to show */\r\n        //** verified = If user has proceeded using Facebook oAuth (not that likely to be a bot) */\r\n        //** formHidden = When user proceeds with Facebook oAuth, most data is already known. The name + email form is hidden */\r\n        //** showError / showSuccess = Displays the corresponding messages */\r\n\r\n        this.state = {\r\n           phone: undefined,\r\n           email: undefined,\r\n           prename: undefined,\r\n           surname: undefined,\r\n           country: false,\r\n           picture: undefined,\r\n           gdpr: false,\r\n           newsletter: false,\r\n           showError: false,\r\n           verified: false,\r\n           showSuccess: false,\r\n           oAuthed: false,\r\n           formHidden: false,\r\n           phonelive: \"\",\r\n           emaillive: \"\",\r\n           prenamelive: \"\",\r\n           surnamelive: \"\"\r\n        }\r\n    }\r\n\r\n    //** oAuth response */\r\n    responseFacebook = (response) => {\r\n        if(response.first_name !== undefined && response.first_name !== null){\r\n            this.setState({prenamelive: response.first_name});\r\n        }\r\n        if(response.last_name !== undefined && response.last_name !== null){\r\n            this.setState({surnamelive: response.last_name});\r\n        }\r\n        if(response.email !== undefined && response.email !== null){\r\n            this.setState({emaillive: response.email});\r\n        }\r\n        if(response.picture !== undefined && response.picture !== null){\r\n            this.setState({picture: response.picture.data.url});\r\n        }\r\n        if(response.accessToken !== undefined && response.accessToken !== null){\r\n            this.setState({verified: true});\r\n        }\r\n\r\n        this.validateInput();\r\n        this.oAuthSuccess();\r\n    }\r\n\r\n    //** Google oAuth has been deactivated for now */\r\n    /*responseGoogle = (response) => {\r\n        console.log(response);\r\n    }*/\r\n\r\n    //** oAuth function */\r\n    oAuthSuccess = () => {\r\n        //** Hide oAuth buttons\r\n        this.setState({oAuthed: true});\r\n        this.setState({formHidden: true});\r\n    }\r\n\r\n    //** Send form data - create user with user mutation */\r\n    sendData = async () => {\r\n        //** Set prename localStorgae */\r\n        localStorage.setItem('f_n', this.state.prename);\r\n        localStorage.setItem('f_l', this.state.surname);\r\n        localStorage.setItem('f_e', this.state.email);\r\n        localStorage.setItem('f_p', this.state.phone);\r\n        //** Set values that will be sent */\r\n        let formvalues = {\r\n            \"title\": \"\",\r\n            \"first_name\": this.state.prename,\r\n            \"last_name\": this.state.surname,\r\n            \"email\": this.state.email,\r\n            \"telephone\": this.state.phone,\r\n            \"address\": \"\",\r\n            \"postal_code\": \"\",\r\n            \"city\": \"\",\r\n            \"country\": \"\",\r\n            \"verified\": this.state.verified,\r\n            \"newsletter\": this.state.newsletter\r\n        };\r\n        //** console.log(formvalues); */\r\n        //** Check if the form values have been set (just to be sure) */\r\n        if(formvalues !== null || formvalues !== undefined){\r\n            //** Call graphQL mutation */\r\n            await this.props.register({\r\n                variables: {\r\n                    \"token\": this.props.token,\r\n                    \"values\": formvalues\r\n                }\r\n            })\r\n            .then(({data}) => {\r\n                //** Handle response (debug using console.log of data) */\r\n                if(data.registrationFormPage.result === \"OK\"){\r\n                    //** Hide error and show success message */\r\n                    this.setState({showError: false});\r\n                    this.setState({showSuccess: true});\r\n                } else {\r\n                    //** Show error message and hide success message */\r\n                    this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n                    this.setState({showError: true});\r\n                    this.setState({showSuccess: false});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                this.setState({buffer: \"Es ist ein unerwarteter Fehler aufgetreten. Bitte versuchen Sie es etwas später erneut.\"})\r\n                this.setState({showError: true});\r\n                this.setState({showSuccess: false});\r\n                console.error(\"Mutation error:\");\r\n                console.log(error);\r\n            })\r\n        } else {\r\n            this.setState({buffer: \"Ihre Eingaben entspricht nicht den Vorraussetzungen. Bitte überprüfen Sie Ihre Eingaben.\"})\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }\r\n    };\r\n\r\n    validateInput = () => {\r\n        this.checkTel(this.state.phonelive);\r\n        this.checkEmail(this.state.emaillive);\r\n        this.checkName(\"surname\",this.state.surnamelive);\r\n        this.checkName(\"prename\",this.state.prenamelive);\r\n    }\r\n\r\n    //** Handle the submit of the modal form */\r\n    handleSubmitForm = (event) => {\r\n        event.preventDefault();\r\n        let error = [];\r\n        let buffer = [];\r\n        \r\n        //** Check inputs and generate errors */\r\n        //** Errors are written to a buffer which is then written to this.state.buffer */\r\n        if(this.state.phone === undefined){\r\n            buffer.push(\"Bitte geben Sie eine Telefonnummer ein.\");\r\n            error.push(1);\r\n        } else {\r\n            if(this.state.phone === false){\r\n                buffer.push(\"Bitte geben Sie Ihre Vorwahl Ihres Landes an. (z.B. +43)\");\r\n                error.push(2);\r\n            }\r\n        }\r\n        if (this.state.email === false){\r\n            buffer.push(\"Die eingegebene E-Mail Adresse ist ungültig.\");\r\n            error.push(3);\r\n        }\r\n        if (this.state.prename === undefined || this.state.surname === undefined){\r\n            buffer.push(\"Bitte geben Sie Ihren Namen ein.\");\r\n            error.push(4);\r\n        } \r\n        if (this.state.prename === false || this.state.surname === false){\r\n            buffer.push(\"Ihr Name darf keine Sonderzeichen enthalten.\");\r\n            error.push(5);\r\n        } \r\n        if (this.state.gdpr === false){\r\n            buffer.push(\"Bitte beachten Sie die Datenschutzerklärung.\");\r\n            error.push(6);\r\n        }\r\n        if(error !== undefined && error.length > 0){\r\n            //** Write buffer, show error alert and hide success alert */\r\n            this.setState({buffer:buffer});\r\n            this.setState({showError: true});\r\n            this.setState({showSuccess: false});\r\n        }else{\r\n            //** If no errors -> Send the data using a graphQL mutation */\r\n            this.sendData();\r\n        };\r\n    }\r\n\r\n    //** Update states with latest input field data + verify inputs */\r\n    handleChange = (field, value) => {\r\n        //** Update live states and check validity in callback */\r\n        switch (field) {\r\n            case 'phone':\r\n                this.setState({phonelive:value}, this.checkTel(value))\r\n                break;\r\n            case 'email':\r\n                this.setState({emaillive:value}, this.checkEmail(value))\r\n                break;\r\n            case 'prename':\r\n                this.setState({prenamelive:value},this.checkName(\"prename\",value))\r\n                break;\r\n            case 'surname':\r\n                this.setState({surnamelive:value},this.checkName(\"surname\",value))\r\n                break;\r\n            case 'newsletter':\r\n                this.setState({newsletter:value})\r\n                break;\r\n            case 'gdpr':\r\n                this.setState({gdpr:value})\r\n                break;\r\n            default:\r\n                this.setState({[field]:value})\r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if phone number is valid */\r\n    checkTel = (value) => {\r\n        if(value !== ''){\r\n            const phoneNumber = parsePhoneNumberFromString(value);\r\n            if(phoneNumber !== undefined){\r\n                phoneNumber.formatInternational();\r\n                if(phoneNumber.country !== undefined){\r\n                    this.setState({phone:phoneNumber.number})\r\n                    this.setState({country:phoneNumber.country.toLowerCase()})\r\n                }else{\r\n                    this.setState({country:false})\r\n                    this.setState({phone:false})\r\n                }\r\n                \r\n            }else{\r\n                this.setState({country:false})\r\n                this.setState({phone:false})\r\n            }\r\n        } else {\r\n            this.setState({country:false})\r\n            this.setState({phone:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if E-Mail is valid */\r\n    checkEmail = (value) => {\r\n        if(value !== ''){\r\n            if(EmailValidator.validate(value)){\r\n                this.setState({email:value})\r\n            } else {\r\n                this.setState({email:false})\r\n            }\r\n        } else {\r\n            this.setState({email:undefined})\r\n        }\r\n    }\r\n\r\n    //** Check if name contains special chars */\r\n    checkName = (field,value) => {\r\n        let format = /[ !@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?]/;\r\n        if(format.test(value) === false){\r\n            if(value !== \"\"){\r\n                this.setState({[field]:value})\r\n            } else {\r\n                this.setState({[field]:undefined})\r\n            }\r\n            \r\n        }else{\r\n            this.setState({[field]:false})\r\n        }\r\n    }\r\n\r\n    //** Update flag icon in phone input */\r\n    printFlag = () => {\r\n        if(this.state.country !== false){\r\n            return <FlagIcon code={this.state.country} />\r\n        }\r\n    }\r\n\r\n    printErrorDialogs = () => {\r\n        if(Array.isArray(this.state.buffer)){\r\n            let errors = [];\r\n            let buffer = this.state.buffer;\r\n            Object.keys(buffer).forEach(function (element, index) {\r\n                errors.push(<p key={index}>{buffer[index]}</p>);\r\n            });\r\n            return errors;\r\n        } else {\r\n            return <p>{this.state.buffer}</p>\r\n        }\r\n    }\r\n\r\n    //** Print error Alert component */\r\n    printError = () => {\r\n        //** There have been issues, where printError() was called, but this.state.showError and this.state.buffer was false -> leading to crash */\r\n        if(this.state.showError){\r\n            //** Check if message (buffer) is written. */\r\n            if(this.state.buffer !== null || this.state.buffer !== undefined){\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        {\r\n                            this.printErrorDialogs()\r\n                        }\r\n                    </Alert>\r\n                );\r\n            } else {\r\n                return(\r\n                    <Alert className=\"alert-danger\" show=\"true\">\r\n                        Unknown error.\r\n                    </Alert>\r\n                );\r\n            }\r\n            \r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    //** Show formular for edit */ \r\n    editForm = () => {\r\n        this.setState({formHidden: false});\r\n    }\r\n\r\n    renderContent (){\r\n        \r\n        //** Text data for the modal */ \r\n        if(this.props.data.pages[1] !== undefined){\r\n            let modaldata = (this.props.data.pages[1]);\r\n            //console.log(modaldata);\r\n\r\n            return(\r\n                <div className=\"modal fade\" id=\"registration\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"Registrieren\" aria-hidden=\"true\" data-backdrop=\"true\">\r\n                \r\n                <div className=\"modal-dialog modal-lg modal-notify modal-info\" role=\"document\">\r\n                    <div className=\"modal-content\">\r\n                    \r\n                    <div className=\"modal-body\">\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\" className=\"dark-text\">×</span>\r\n                        </button>\r\n                        <div className=\"lead font-weight-bold text-center\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationHead }/>))}}></div>\r\n                        <hr/>\r\n                        {this.state.showSuccess ? (\r\n                            <div className=\"success\">\r\n                                <Alert className=\"alert-success\" show=\"true\">\r\n                                    <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.thankYouText }/>))}}></div>\r\n                                </Alert>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"register-form\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-7\">\r\n                                {!this.state.oAuthed ? (\r\n                                    <div>\r\n                                        <div className=\"oAuth\">\r\n                                        <FacebookLogin\r\n                                                appId=\"438514240304319\"\r\n                                                autoLoad={false}\r\n                                                icon={<FaFacebook/>}\r\n                                                cssClass=\"btn-facebook kep-login-facebook kep-login-facebook-medium\"\r\n                                                fields=\"first_name,last_name,email,picture\"\r\n                                                textButton=\"Weiter mit Facebook\"\r\n                                                callback={this.responseFacebook}\r\n                                            />\r\n                                        \r\n                                            {\r\n                                                //** Google oAuth has been disabled for now */\r\n\r\n                                                /*<GoogleLogin\r\n                                                    clientId=\"762647868786-a6do4s713inonqo663lbgqqgo40u5sen.apps.googleusercontent.com\"\r\n                                                    buttonText=\"Weiter mit Google\"\r\n                                                    className=\"btn-google\"\r\n                                                    onSuccess={this.responseGoogle}\r\n                                                    onFailure={this.responseGoogle}\r\n                                                    cookiePolicy={'single_host_origin'}\r\n                                                />*/\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w-100\">\r\n                                            <div className=\"splitter my-4\"><span className=\"or\"><span className=\"or-text\">oder</span></span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                ):(\r\n                                    <div className=\"alert alert-success mb-4\">\r\n                                        <h4 className=\"font-weight-bold\">Hallo {this.state.prename}!</h4><p>Wir benötigen jetzt nur noch Deine Telefonnummer.</p>\r\n                                    </div>\r\n                                )}\r\n                                    {this.printError()}\r\n                                \r\n                                    <form id=\"form-reg\" onSubmit={(e) => {this.handleSubmitForm(e); e.preventDefault();}}>\r\n                                        <div className=\"input-grp\">\r\n                                            {this.printFlag()}\r\n                                            <i className=\"fas fa-phone\"></i>\r\n                                            <Input className=\"my-3\" type=\"text\" name=\"phone\" placeholder=\"Telefonnummer\" value={this.state.phonelive} validation={this.state.valid1} onChange={this.handleChange.bind(this)}/>\r\n                                        </div>\r\n                                        {!this.state.formHidden ? (\r\n                                        <div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-envelope\"></i>\r\n                                                <Input className=\"my-3\" type=\"email\" name=\"email\" placeholder=\"E-Mail Adresse (optional)\" value={this.state.emaillive} validation={this.state.valid2}  onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"prename\" placeholder=\"Vorname\" value={this.state.prenamelive} validation={this.state.valid3} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                            <div className=\"input-grp\">\r\n                                                <i className=\"far fa-user-circle\"></i>\r\n                                                <Input className=\"my-3\" type=\"text\" name=\"surname\" placeholder=\"Nachname\" value={this.state.surnamelive} validation={this.state.valid4} onChange={this.handleChange.bind(this)}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        ) : (\r\n                                            <div className=\"alert alert-info register-info alert-data\">\r\n                                                <p className=\"m-0\">\r\n                                                <span className=\"font-weight-bold\">Meine Daten</span><br/>\r\n                                                Name: {this.state.prename} {this.state.surname}<br/>\r\n                                                E-Mail: {this.state.email}<br/>\r\n                                                <Button btnstyle=\"oELEGANT\" size=\"SM\" onClick={this.editForm}>Ändern</Button>\r\n                                                </p>\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"text-left mb-3\">\r\n                                        <Checkbox name=\"newsletter\" className=\"my-4\" onChange={this.handleChange.bind(this)}>\r\n                                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationNewsletterText }/>))}}></div>\r\n                                        </Checkbox>\r\n                                        <Checkbox name=\"gdpr\" validation={this.state.valid6} onChange={this.handleChange.bind(this)}>\r\n                                            <div dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationPrivacyText }/>))}}></div>\r\n                                        </Checkbox>\r\n                                        </div>\r\n                                        {modaldata.registrationButton.buttonPage !== null &&\r\n                                            <input className=\"btn btn-outline-elegant font-weight-bold\" type=\"submit\" value={modaldata.registrationButton.buttonTitle} />\r\n                                        }   \r\n                                        \r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"col-md-5 text-left\">\r\n                                <Alert className=\"alert-info register-info\" show=\"true\">\r\n                                    <i className=\"far fa-lightbulb fa-2x\"></i>\r\n                                    <div className=\"mt-2 dark-grey-text\" dangerouslySetInnerHTML={{__html: ReactHtmlParser(renderToString(<Text value={ modaldata.registrationInfoText }/>))}}></div>\r\n                                </Alert>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return false;\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        if(this.props.data.pages !== undefined){\r\n            return this.renderContent();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(CREATE_USER_MUTATION, {\r\n        name: 'register'\r\n    }),\r\n    graphql(GET_MODAL_DATA, {\r\n        options: (props) => ({ variables: { \"token\": props.token } })\r\n    })\r\n)(Modal);\r\n"],"sourceRoot":""}