{"version":3,"sources":["components/atoms/ModalButton/btn_types.js","components/atoms/ModalButton/btn_styles.js","components/atoms/ModalButton/btn_sizes.js","components/atoms/ModalButton/index.js","components/organisms/SectionContents/lab.js","../node_modules/classnames/bind.js"],"names":["ButtonType","DEFAULT","R","ButtonStyle","DANGER","SUCCESS","WARNING","INFO","PRIMARY","SECONDARY","WHITE","ELEGANT","oDANGER","oSUCCESS","oWARNING","oINFO","oPRIMARY","oSECONDARY","oWHITE","oELEGANT","ButtonSize","SM","MD","LG","cbs","classnames","bind","cbst","cbt","Button","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","isModal","exists","param","btnlink","undefined","buttonPage","urlPath","replace","console","error","getClassProps","btnstyle","btntype","size","disabled","className","state","visible","react","data-toggle","data-target","buttonTitle","href","buttonLink","React","defaultProps","btntitle","btnhref","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_atoms_ModalButton__WEBPACK_IMPORTED_MODULE_1__","SectionContent","content","btn","showHead","dangerouslySetInnerHTML","__html","heading","draggable","src","img","alt","lead","map","item","i","paragraph","key","printParagraph","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","arguments","length","arg","argType","push","Array","isArray","apply","join","module","exports","default"],"mappings":"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","file":"static/js/11.b90f05a2.chunk.js","sourcesContent":["const ButtonType = {\r\n    DEFAULT: '',\r\n    R: 'btn-rounded'\r\n}\r\n\r\nexport default ButtonType\r\n","const ButtonStyle = {\r\n    DANGER: 'btn-danger',\r\n    SUCCESS: 'btn-success',\r\n    WARNING: 'btn-warning',\r\n    INFO: 'btn-info',\r\n    PRIMARY: 'btn-primary',\r\n    SECONDARY: 'btn-secondary',\r\n    WHITE: 'btn-white',\r\n    ELEGANT: 'btn-elegant',\r\n    oDANGER: 'btn-outline-danger',\r\n    oSUCCESS: 'btn-outline-success',\r\n    oWARNING: 'btn-outline-warning',\r\n    oINFO: 'btn-outline-info',\r\n    oPRIMARY: 'btn-outline-primary',\r\n    oSECONDARY: 'btn-outline-secondary',\r\n    oWHITE: 'btn-outline-white',\r\n    oELEGANT: 'btn-outline-elegant'\r\n}\r\n\r\nexport default ButtonStyle","const ButtonSize = {\r\n    SM: 'btn-sm',\r\n    MD: 'btn-md',\r\n    LG: 'btn-lg',\r\n    DEFAULT: ''\r\n}\r\n\r\nexport default ButtonSize\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n//** Extended Standard Frameworks */\r\nimport classnames from 'classnames/bind'\r\n\r\n//** Additional visual values */\r\nimport ButtonType from './btn_types.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * R (Rounded)\r\n */\r\nimport ButtonStyle from './btn_styles.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * DANGER: Red\r\n * SUCCESS: Green\r\n * WARNING: Orange\r\n * INFO: Light Blue\r\n * PRIMARY: Blue\r\n * SECONDARY: Purple\r\n * WHITE: White\r\n * ELEGANT: Dark Grey\r\n * oDANGER: Red (outline)\r\n * oSUCCESS: Green (outline)\r\n * oWARNING: Orange (outline)\r\n * oINFO: Light Blue (outline)\r\n * oPRIMARY: Blue (outline)\r\n * oSECONDARY: Purple (outline)\r\n * oWHITE: White (outline)\r\n * oELEGANT: Dark Grey (outline)\r\n */\r\nimport ButtonSize from './btn_sizes.js';\r\n/**\r\n * POSSIBLE VALUES\r\n * SM (Small)\r\n * MD (Medium)\r\n * LG (Large)\r\n */\r\n\r\n//** Connect additional visual values with classname */\r\nvar cbs = classnames.bind(ButtonSize);\r\nvar cbst = classnames.bind(ButtonStyle);\r\nvar cbt = classnames.bind(ButtonType);\r\n\r\n/**\r\n * General Button Element\r\n */\r\nclass Button extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n           visible: false\r\n        }\r\n    }\r\n\r\n    //** Convert url to Modal */\r\n    isModal = () => {\r\n        if(this.exists()){\r\n            if(this.props.param.btnlink === null || this.props.param.btnlink === undefined){\r\n                this.props.param.buttonPage.urlPath = this.props.param.buttonPage.urlPath.replace('/','#');\r\n                return true;\r\n            }\r\n            if(this.props.param.btnlink !== null && this.props.param.btnlink !== undefined){\r\n                console.error(\"Link\");\r\n                return false;\r\n            } \r\n        }\r\n        \r\n    }\r\n\r\n    //** Check if button should be displayed */\r\n    exists = () =>{\r\n        if(this.props.param === undefined || this.props.param === null){\r\n            return false;\r\n        } else {\r\n            if((this.props.param.buttonPage !== null && this.props.param.buttonPage !== undefined) || (this.props.param.btnlink !== null && this.props.param.btnlink !== undefined)){\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //** Combine multiple values for className */\r\n    getClassProps = () => {\r\n        let props = classnames(\r\n            \"btn\",\r\n            \"font-weight-bold\",\r\n            cbst(this.props.btnstyle),\r\n            cbt(this.props.btntype),\r\n            cbs(this.props.size),\r\n            this.props.disabled,\r\n            this.props.className\r\n        )\r\n        return props;\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.exists() &&\r\n                    <div>\r\n                        {this.isModal() === true ? (\r\n                                <button data-toggle=\"modal\" data-target={this.props.param.buttonPage.urlPath} className={this.getClassProps()}>\r\n                                    {this.props.param.buttonTitle}\r\n                                </button>\r\n                            ) : (\r\n                                <a href={this.props.param.buttonLink} className={this.getClassProps()}>\r\n                                    {this.props.param.buttonTitle}\r\n                                </a>\r\n                            )\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n//** Define how a default button should look (without any additional information provided) */\r\nButton.defaultProps = {\r\n    size: ButtonSize.DEFAULT,\r\n    btnstyle: ButtonStyle.WHITE,\r\n    btntype: ButtonType.R,\r\n    className: '',\r\n    disabled: false,\r\n    btnlink: null,\r\n    btntitle: \"Unnamed\",\r\n    btnhref: \"\"\r\n}\r\n\r\nexport default Button\r\n","//** Standard Frameworks */\r\nimport * as React from 'react'\r\n\r\n//** Components */\r\n//** Atoms */\r\nimport ModalBtn from \"../../atoms/ModalButton\"\r\n\r\ntype Props = {\r\n    content: string\r\n}\r\n\r\n/**\r\n * Section: Lab\r\n */\r\nconst SectionContent = (props: Props): React.Element<*> => {\r\n    const { content, btn } = props;\r\n\r\n    function printParagraph(i){\r\n        if(typeof content[i].paragraph != \"undefined\"){\r\n            return (<div key={i} dangerouslySetInnerHTML={{__html: content[i].paragraph}}></div>)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container text-left\">\r\n            {props.showHead === true &&\r\n                <h2 className=\"font-weight-bold\" dangerouslySetInnerHTML={{__html: content[0].heading}}></h2>\r\n            }\r\n            <div className=\"text-center my-5\">\r\n                <img draggable=\"false\" className=\"img-fluid\" src={content[1].img} alt=\"Beautyprogramm starten\"/>\r\n            </div>\r\n            <div className=\"row my-5\">\r\n            <div className=\"col-md-6\">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12\"><div className=\"lead\" dangerouslySetInnerHTML={{__html: content[2].lead}}></div></div>\r\n                        <div className=\"col-12\"><ModalBtn param={btn} /></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    {content.map((item, i) => {\r\n                        return (\r\n                            printParagraph(i)\r\n                        )\r\n                    })}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionContent\r\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(this && this[arg] || arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(this, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(this && this[key] || key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}